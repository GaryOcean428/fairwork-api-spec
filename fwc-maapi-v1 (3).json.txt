{
    "swagger": "2.0",
    "info": {
        "title": "Fair Work Commission Modern Awards Pay Database API",
        "version": "1.0",
        "description": "Open APIs for the Modern Awards Pay Database and its associated Exports",
        "termsOfService": "https://developer.fwc.gov.au/terms-of-use",
        "contact": {
            "name": "Fair Work Commission Portal - Contact Us",
            "url": "https://www.fwc.gov.au/about-us/contact-us"
        }
    },
    "host": "api.fwc.gov.au",
    "schemes": [
        "https"
    ],
    "securityDefinitions": {
        "apiKeyHeader": {
            "type": "apiKey",
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header"
        },
        "apiKeyQuery": {
            "type": "apiKey",
            "name": "subscription-key",
            "in": "query"
        }
    },
    "security": [
        {
            "apiKeyHeader": []
        },
        {
            "apiKeyQuery": []
        }
    ],
    "paths": {
        "/api/v1/awards": {
            "get": {
                "description": "This API is designed to retrieve a list of modern awards to support payroll business processes.",
                "operationId": "GetAwards",
                "summary": "Retrieve all awards for the specified parameters",
                "tags": [
                    "Awards"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "The human readable title of the award. Example:\"mining\" returns all awards with the word 'mining' in its title.\r\n             You can use the plus sign (\"+\") to add multiple keywords to refine your search. \"Mining+Black\" will return awards which have the word \"mining\" AND \"black\".",
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Format - int32. The page requested of the results retrieved.\r\n             Default: 1",
                        "type": "integer",
                        "default": 1,
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Format - int32. The limit for the results per page.\r\n             Default: 10 and Maximum acceptable: 100",
                        "type": "integer",
                        "default": 10,
                        "format": "int32"
                    },
                    {
                        "name": "award_operative_from",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). The date when the award came into operation. The default format is \"YYYY-MM-DD\"",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "award_operative_to",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). The date when the award ceased to be in effect (was revoked). The default format is \"YYYY-MM-DD\"",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Can be sorted using \"code, name, award_fixed_id, award_operative_from, award_operative_to, published_year, version_number, last_modified_datetime\".\r\n             Example \"name asc, code desc\". Where sort is not specified, the default sort is \"code\" ascending.",
                        "type": "string"
                    }
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "List of Awards",
                        "schema": {
                            "$ref": "#/definitions/GetAwardsResponse"
                        },
                        "examples": {
                            "application/json": {
                                "_meta": {
                                    "current_page": 0,
                                    "page_count": 0,
                                    "limit": 0,
                                    "result_count": 0,
                                    "first_row_on_page": 0,
                                    "last_row_on_page": 0,
                                    "has_more_results": true,
                                    "has_previous_results": true
                                },
                                "results": [
                                    {
                                        "award_id": 0,
                                        "award_fixed_id": 0,
                                        "code": "string",
                                        "name": "string",
                                        "award_operative_from": "string",
                                        "award_operative_to": "string",
                                        "version_number": 0,
                                        "last_modified_datetime": "string",
                                        "published_year": 0
                                    }
                                ],
                                "_links": [
                                    {
                                        "href": "string",
                                        "rel": "string",
                                        "method": "string"
                                    }
                                ]
                            },
                            "text/json": {
                                "_meta": {
                                    "current_page": 0,
                                    "page_count": 0,
                                    "limit": 0,
                                    "result_count": 0,
                                    "first_row_on_page": 0,
                                    "last_row_on_page": 0,
                                    "has_more_results": true,
                                    "has_previous_results": true
                                },
                                "results": [
                                    {
                                        "award_id": 0,
                                        "award_fixed_id": 0,
                                        "code": "string",
                                        "name": "string",
                                        "award_operative_from": "string",
                                        "award_operative_to": "string",
                                        "version_number": 0,
                                        "last_modified_datetime": "string",
                                        "published_year": 0
                                    }
                                ],
                                "_links": [
                                    {
                                        "href": "string",
                                        "rel": "string",
                                        "method": "string"
                                    }
                                ]
                            },
                            "application/xml": "<GetAwardsResponse>\r\n  <_meta>\r\n    <current_page>0</current_page>\r\n    <page_count>0</page_count>\r\n    <limit>0</limit>\r\n    <result_count>0</result_count>\r\n    <first_row_on_page>0</first_row_on_page>\r\n    <last_row_on_page>0</last_row_on_page>\r\n    <has_more_results>true</has_more_results>\r\n    <has_previous_results>true</has_previous_results>\r\n  </_meta>\r\n  <results>\r\n    <result>\r\n      <award_id>0</award_id>\r\n      <award_fixed_id>0</award_fixed_id>\r\n      <code>string</code>\r\n      <name>string</name>\r\n      <award_operative_from>string</award_operative_from>\r\n      <award_operative_to>string</award_operative_to>\r\n      <version_number>0</version_number>\r\n      <last_modified_datetime>string</last_modified_datetime>\r\n      <published_year>0</published_year>\r\n    </result>\r\n  </results>\r\n  <_links>\r\n    <_link>\r\n      <href>string</href>\r\n      <rel>string</rel>\r\n      <method>string</method>\r\n    </_link>\r\n  </_links>\r\n</GetAwardsResponse>",
                            "text/xml": "<GetAwardsResponse>\r\n  <_meta>\r\n    <current_page>0</current_page>\r\n    <page_count>0</page_count>\r\n    <limit>0</limit>\r\n    <result_count>0</result_count>\r\n    <first_row_on_page>0</first_row_on_page>\r\n    <last_row_on_page>0</last_row_on_page>\r\n    <has_more_results>true</has_more_results>\r\n    <has_previous_results>true</has_previous_results>\r\n  </_meta>\r\n  <results>\r\n    <result>\r\n      <award_id>0</award_id>\r\n      <award_fixed_id>0</award_fixed_id>\r\n      <code>string</code>\r\n      <name>string</name>\r\n      <award_operative_from>string</award_operative_from>\r\n      <award_operative_to>string</award_operative_to>\r\n      <version_number>0</version_number>\r\n      <last_modified_datetime>string</last_modified_datetime>\r\n      <published_year>0</published_year>\r\n    </result>\r\n  </results>\r\n  <_links>\r\n    <_link>\r\n      <href>string</href>\r\n      <rel>string</rel>\r\n      <method>string</method>\r\n    </_link>\r\n  </_links>\r\n</GetAwardsResponse>"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "id": "string",
                                        "detail": "string",
                                        "code": "string",
                                        "source": {
                                            "parameter": "string",
                                            "pointer": "string"
                                        }
                                    }
                                ]
                            },
                            "text/json": {
                                "errors": [
                                    {
                                        "id": "string",
                                        "detail": "string",
                                        "code": "string",
                                        "source": {
                                            "parameter": "string",
                                            "pointer": "string"
                                        }
                                    }
                                ]
                            },
                            "application/xml": "<ApiError>\r\n  <errors>\r\n    <error>\r\n      <id>string</id>\r\n      <detail>string</detail>\r\n      <code>string</code>\r\n      <source>\r\n        <parameter>string</parameter>\r\n        <pointer>string</pointer>\r\n      </source>\r\n    </error>\r\n  </errors>\r\n</ApiError>",
                            "text/xml": "<ApiError>\r\n  <errors>\r\n    <error>\r\n      <id>string</id>\r\n      <detail>string</detail>\r\n      <code>string</code>\r\n      <source>\r\n        <parameter>string</parameter>\r\n        <pointer>string</pointer>\r\n      </source>\r\n    </error>\r\n  </errors>\r\n</ApiError>"
                        }
                    }
                }
            }
        },
        "/api/v1/awards/{id_or_code}": {
            "get": {
                "description": "This API is designed to retrieve a modern award using the \"award_fixed_id\" or the award \"code\" to support payroll business processes.",
                "operationId": "AwardsIdentification",
                "summary": "Retrieve specific award using an award identifier.",
                "tags": [
                    "Awards"
                ],
                "parameters": [
                    {
                        "name": "id_or_code",
                        "in": "path",
                        "description": "Search by \"award_fixed_id\" or \"code\". Example \"id_or_code=\"12\" or \"id_or_code\"=\"MA000012\".",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Format - int32. The page requested of the results retrieved. Default: 1",
                        "type": "integer",
                        "default": 1,
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Format - int32. The limit for the results per page. Default: 10 and Maximum acceptable: 100",
                        "type": "integer",
                        "default": 10,
                        "format": "int32"
                    },
                    {
                        "name": "award_operative_from",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). The date when the award came into operation. The default format is \"YYYY-MM-DD\"",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "award_operative_to",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). The date when the award ceased to be in effect (was revoked). The default format is \"YYYY-MM-DD\"",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Can be sorted using \"code, name, award_fixed_id, award_operative_from, award_operative_to, published_year, version_number, last_modified_datetime\".\r\n             Example \"name asc, code desc\". Where sort is not specified, the default sort is \"published_year\" descending.",
                        "type": "string"
                    }
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "List of Awards for given ID or Code",
                        "schema": {
                            "$ref": "#/definitions/GetAwardsByIdResponse"
                        },
                        "examples": {
                            "application/json": {
                                "_meta": {
                                    "current_page": 0,
                                    "page_count": 0,
                                    "limit": 0,
                                    "result_count": 0,
                                    "first_row_on_page": 0,
                                    "last_row_on_page": 0,
                                    "has_more_results": true,
                                    "has_previous_results": true
                                },
                                "results": [
                                    {
                                        "award_id": 0,
                                        "award_fixed_id": 0,
                                        "code": "string",
                                        "name": "string",
                                        "award_operative_from": "string",
                                        "award_operative_to": "string",
                                        "version_number": 0,
                                        "last_modified_datetime": "string",
                                        "published_year": 0
                                    }
                                ],
                                "_links": [
                                    {
                                        "href": "string",
                                        "rel": "string",
                                        "method": "string"
                                    }
                                ]
                            },
                            "text/json": {
                                "_meta": {
                                    "current_page": 0,
                                    "page_count": 0,
                                    "limit": 0,
                                    "result_count": 0,
                                    "first_row_on_page": 0,
                                    "last_row_on_page": 0,
                                    "has_more_results": true,
                                    "has_previous_results": true
                                },
                                "results": [
                                    {
                                        "award_id": 0,
                                        "award_fixed_id": 0,
                                        "code": "string",
                                        "name": "string",
                                        "award_operative_from": "string",
                                        "award_operative_to": "string",
                                        "version_number": 0,
                                        "last_modified_datetime": "string",
                                        "published_year": 0
                                    }
                                ],
                                "_links": [
                                    {
                                        "href": "string",
                                        "rel": "string",
                                        "method": "string"
                                    }
                                ]
                            },
                            "application/xml": "<GetAwardsByIdResponse>\r\n  <_meta>\r\n    <current_page>0</current_page>\r\n    <page_count>0</page_count>\r\n    <limit>0</limit>\r\n    <result_count>0</result_count>\r\n    <first_row_on_page>0</first_row_on_page>\r\n    <last_row_on_page>0</last_row_on_page>\r\n    <has_more_results>true</has_more_results>\r\n    <has_previous_results>true</has_previous_results>\r\n  </_meta>\r\n  <results>\r\n    <result>\r\n      <award_id>0</award_id>\r\n      <award_fixed_id>0</award_fixed_id>\r\n      <code>string</code>\r\n      <name>string</name>\r\n      <award_operative_from>string</award_operative_from>\r\n      <award_operative_to>string</award_operative_to>\r\n      <version_number>0</version_number>\r\n      <last_modified_datetime>string</last_modified_datetime>\r\n      <published_year>0</published_year>\r\n    </result>\r\n  </results>\r\n  <_links>\r\n    <_link>\r\n      <href>string</href>\r\n      <rel>string</rel>\r\n      <method>string</method>\r\n    </_link>\r\n  </_links>\r\n</GetAwardsByIdResponse>",
                            "text/xml": "<GetAwardsByIdResponse>\r\n  <_meta>\r\n    <current_page>0</current_page>\r\n    <page_count>0</page_count>\r\n    <limit>0</limit>\r\n    <result_count>0</result_count>\r\n    <first_row_on_page>0</first_row_on_page>\r\n    <last_row_on_page>0</last_row_on_page>\r\n    <has_more_results>true</has_more_results>\r\n    <has_previous_results>true</has_previous_results>\r\n  </_meta>\r\n  <results>\r\n    <result>\r\n      <award_id>0</award_id>\r\n      <award_fixed_id>0</award_fixed_id>\r\n      <code>string</code>\r\n      <name>string</name>\r\n      <award_operative_from>string</award_operative_from>\r\n      <award_operative_to>string</award_operative_to>\r\n      <version_number>0</version_number>\r\n      <last_modified_datetime>string</last_modified_datetime>\r\n      <published_year>0</published_year>\r\n    </result>\r\n  </results>\r\n  <_links>\r\n    <_link>\r\n      <href>string</href>\r\n      <rel>string</rel>\r\n      <method>string</method>\r\n    </_link>\r\n  </_links>\r\n</GetAwardsByIdResponse>"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "id": "string",
                                        "detail": "string",
                                        "code": "string",
                                        "source": {
                                            "parameter": "string",
                                            "pointer": "string"
                                        }
                                    }
                                ]
                            },
                            "text/json": {
                                "errors": [
                                    {
                                        "id": "string",
                                        "detail": "string",
                                        "code": "string",
                                        "source": {
                                            "parameter": "string",
                                            "pointer": "string"
                                        }
                                    }
                                ]
                            },
                            "application/xml": "<ApiError>\r\n  <errors>\r\n    <error>\r\n      <id>string</id>\r\n      <detail>string</detail>\r\n      <code>string</code>\r\n      <source>\r\n        <parameter>string</parameter>\r\n        <pointer>string</pointer>\r\n      </source>\r\n    </error>\r\n  </errors>\r\n</ApiError>",
                            "text/xml": "<ApiError>\r\n  <errors>\r\n    <error>\r\n      <id>string</id>\r\n      <detail>string</detail>\r\n      <code>string</code>\r\n      <source>\r\n        <parameter>string</parameter>\r\n        <pointer>string</pointer>\r\n      </source>\r\n    </error>\r\n  </errors>\r\n</ApiError>"
                        }
                    }
                }
            }
        },
        "/api/v1/awards/{id_or_code}/pay-rates": {
            "get": {
                "description": "This API is designed to retrieve the pay-rates for a given award to support payroll business processes.",
                "operationId": "GetPayRates",
                "summary": "Retrieve all the pay-rates for an award using an award identifier.",
                "tags": [
                    "Classifications"
                ],
                "parameters": [
                    {
                        "name": "id_or_code",
                        "in": "path",
                        "description": "Search by \"award_fixed_id\" or \"code\". Example: \"id_or_code=\"12\" OR \"id_or_code\"=\"MA000012\"",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "classification_level",
                        "in": "query",
                        "description": "Format - int32. A numerical representation of the classification within the hierarchical structure of classifications in a clause.\r\n             Starts at 1 for the lowest level classification. Example: \"classification_level\"=\"1\"",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "classification_fixed_id",
                        "in": "query",
                        "description": "Format - int32. Unique identification number of classification that is fixed over each year. Example \"classification_fixed_id\"=\"549\"",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "employee_rate_type_code",
                        "in": "query",
                        "description": "An indicator if the rate is for an adult or otherwise. Go to Documentation Guide, <b>Classification</b> tab for the categories.\r\n             Search with a comma (\",\") delimiter to allow multiple codes. Example: \"employee_rate_type_code\"=\"AD\" or \"employee_rate_type_code\"=\"AD,TN\"",
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Format - int32. The page requested of the results retrieved. Default: 1",
                        "type": "integer",
                        "default": 1,
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Format - int32. The limit for the results per page. Default: 10 and Maximum acceptable: 100",
                        "type": "integer",
                        "default": 10,
                        "format": "int32"
                    },
                    {
                        "name": "operative_from",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). The date on which the classification came into effect. The default format is \"YYYY-MM-DD\".",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "operative_to",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). The date on which the classification ceased to be in effect. The default format is \"YYYY-MM-DD\".",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Can be sorted using \"base_rate, calculated_rate, classification_level, classification, employee_rate_type_code, operative_from, operative_to,\r\n             published_year, version_number, last_modified_datetime, classification_fixed_id\". Example \"published_year desc, employee_rate_type_code asc, classification asc\"\r\n             Where sort is not specified, the default sort is \"publishedYear\" descending, then by \"classification_level\" ascending and then by \"employee_rate_type_code\" ascending.",
                        "type": "string"
                    }
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "List of Pay-Rates for the given award",
                        "schema": {
                            "$ref": "#/definitions/GetPayRatesByAwardIdResponse"
                        },
                        "examples": {
                            "application/json": {
                                "_meta": {
                                    "current_page": 0,
                                    "page_count": 0,
                                    "limit": 0,
                                    "result_count": 0,
                                    "first_row_on_page": 0,
                                    "last_row_on_page": 0,
                                    "has_more_results": true,
                                    "has_previous_results": true
                                },
                                "results": [
                                    {
                                        "classification_fixed_id": 0,
                                        "base_pay_rate_id": "string",
                                        "base_rate_type": "string",
                                        "base_rate": 0,
                                        "calculated_pay_rate_id": "string",
                                        "calculated_rate_type": "string",
                                        "calculated_rate": 0,
                                        "parent_classification_name": "string",
                                        "classification": "string",
                                        "classification_level": 0,
                                        "employee_rate_type_code": "string",
                                        "operative_from": "string",
                                        "operative_to": "string",
                                        "version_number": 0,
                                        "published_year": 0,
                                        "last_modified_datetime": "string"
                                    }
                                ],
                                "_links": [
                                    {
                                        "href": "string",
                                        "rel": "string",
                                        "method": "string"
                                    }
                                ]
                            },
                            "text/json": {
                                "_meta": {
                                    "current_page": 0,
                                    "page_count": 0,
                                    "limit": 0,
                                    "result_count": 0,
                                    "first_row_on_page": 0,
                                    "last_row_on_page": 0,
                                    "has_more_results": true,
                                    "has_previous_results": true
                                },
                                "results": [
                                    {
                                        "classification_fixed_id": 0,
                                        "base_pay_rate_id": "string",
                                        "base_rate_type": "string",
                                        "base_rate": 0,
                                        "calculated_pay_rate_id": "string",
                                        "calculated_rate_type": "string",
                                        "calculated_rate": 0,
                                        "parent_classification_name": "string",
                                        "classification": "string",
                                        "classification_level": 0,
                                        "employee_rate_type_code": "string",
                                        "operative_from": "string",
                                        "operative_to": "string",
                                        "version_number": 0,
                                        "published_year": 0,
                                        "last_modified_datetime": "string"
                                    }
                                ],
                                "_links": [
                                    {
                                        "href": "string",
                                        "rel": "string",
                                        "method": "string"
                                    }
                                ]
                            },
                            "application/xml": "<GetPayRatesByAwardIdResponse>\r\n  <_meta>\r\n    <current_page>0</current_page>\r\n    <page_count>0</page_count>\r\n    <limit>0</limit>\r\n    <result_count>0</result_count>\r\n    <first_row_on_page>0</first_row_on_page>\r\n    <last_row_on_page>0</last_row_on_page>\r\n    <has_more_results>true</has_more_results>\r\n    <has_previous_results>true</has_previous_results>\r\n  </_meta>\r\n  <results>\r\n    <result>\r\n      <classification_fixed_id>0</classification_fixed_id>\r\n      <base_pay_rate_id>string</base_pay_rate_id>\r\n      <base_rate_type>string</base_rate_type>\r\n      <base_rate>0</base_rate>\r\n      <calculated_pay_rate_id>string</calculated_pay_rate_id>\r\n      <calculated_rate_type>string</calculated_rate_type>\r\n      <calculated_rate>0</calculated_rate>\r\n      <parent_classification_name>string</parent_classification_name>\r\n      <classification>string</classification>\r\n      <classification_level>0</classification_level>\r\n      <employee_rate_type_code>string</employee_rate_type_code>\r\n      <operative_from>string</operative_from>\r\n      <operative_to>string</operative_to>\r\n      <version_number>0</version_number>\r\n      <published_year>0</published_year>\r\n      <last_modified_datetime>string</last_modified_datetime>\r\n    </result>\r\n  </results>\r\n  <_links>\r\n    <_link>\r\n      <href>string</href>\r\n      <rel>string</rel>\r\n      <method>string</method>\r\n    </_link>\r\n  </_links>\r\n</GetPayRatesByAwardIdResponse>",
                            "text/xml": "<GetPayRatesByAwardIdResponse>\r\n  <_meta>\r\n    <current_page>0</current_page>\r\n    <page_count>0</page_count>\r\n    <limit>0</limit>\r\n    <result_count>0</result_count>\r\n    <first_row_on_page>0</first_row_on_page>\r\n    <last_row_on_page>0</last_row_on_page>\r\n    <has_more_results>true</has_more_results>\r\n    <has_previous_results>true</has_previous_results>\r\n  </_meta>\r\n  <results>\r\n    <result>\r\n      <classification_fixed_id>0</classification_fixed_id>\r\n      <base_pay_rate_id>string</base_pay_rate_id>\r\n      <base_rate_type>string</base_rate_type>\r\n      <base_rate>0</base_rate>\r\n      <calculated_pay_rate_id>string</calculated_pay_rate_id>\r\n      <calculated_rate_type>string</calculated_rate_type>\r\n      <calculated_rate>0</calculated_rate>\r\n      <parent_classification_name>string</parent_classification_name>\r\n      <classification>string</classification>\r\n      <classification_level>0</classification_level>\r\n      <employee_rate_type_code>string</employee_rate_type_code>\r\n      <operative_from>string</operative_from>\r\n      <operative_to>string</operative_to>\r\n      <version_number>0</version_number>\r\n      <published_year>0</published_year>\r\n      <last_modified_datetime>string</last_modified_datetime>\r\n    </result>\r\n  </results>\r\n  <_links>\r\n    <_link>\r\n      <href>string</href>\r\n      <rel>string</rel>\r\n      <method>string</method>\r\n    </_link>\r\n  </_links>\r\n</GetPayRatesByAwardIdResponse>"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "id": "string",
                                        "detail": "string",
                                        "code": "string",
                                        "source": {
                                            "parameter": "string",
                                            "pointer": "string"
                                        }
                                    }
                                ]
                            },
                            "text/json": {
                                "errors": [
                                    {
                                        "id": "string",
                                        "detail": "string",
                                        "code": "string",
                                        "source": {
                                            "parameter": "string",
                                            "pointer": "string"
                                        }
                                    }
                                ]
                            },
                            "application/xml": "<ApiError>\r\n  <errors>\r\n    <error>\r\n      <id>string</id>\r\n      <detail>string</detail>\r\n      <code>string</code>\r\n      <source>\r\n        <parameter>string</parameter>\r\n        <pointer>string</pointer>\r\n      </source>\r\n    </error>\r\n  </errors>\r\n</ApiError>",
                            "text/xml": "<ApiError>\r\n  <errors>\r\n    <error>\r\n      <id>string</id>\r\n      <detail>string</detail>\r\n      <code>string</code>\r\n      <source>\r\n        <parameter>string</parameter>\r\n        <pointer>string</pointer>\r\n      </source>\r\n    </error>\r\n  </errors>\r\n</ApiError>"
                        }
                    }
                }
            }
        },
        "/api/v1/awards/{id_or_code}/classifications": {
            "get": {
                "description": "This API is designed to retrieve award classification information using the \"award_ fixed_ id\" or the award \"code\" to support payroll business processes.",
                "operationId": "AwardClassification",
                "summary": "Retrieve award classification information using an award identifier.",
                "tags": [
                    "Classifications"
                ],
                "parameters": [
                    {
                        "name": "id_or_code",
                        "in": "path",
                        "description": "Search by \"award_fixed_id\" or \"code\". Example: \"id_or_code=\"12\" OR \"id_or_code\"=\"MA000012\"",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "classification_level",
                        "in": "query",
                        "description": "Format - int32. A numerical representation of the classification within the hierarchical structure of classifications in a clause.\r\n             Starts at 1 for the lowest level classification. Example: \"classification_level\"=\"1\"",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "classification_fixed_id",
                        "in": "query",
                        "description": "Format - int32. Unique identification number of classification that is fixed over each year. Example \"classification_fixed_id\"=\"549\"",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Format - int32. The page requested of the results retrieved. Default: 1",
                        "type": "integer",
                        "default": 1,
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Format - int32. The limit for the results per page. Default: 10 and Maximum acceptable: 100",
                        "type": "integer",
                        "default": 10,
                        "format": "int32"
                    },
                    {
                        "name": "operative_from",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). The date on which the classification came into effect. The default format is \"YYYY-MM-DD\".",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "operative_to",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). The date on which the classification ceased to be in effect. The default format is \"YYYY-MM-DD\".",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Can be sorted using \"clause_fixed_id, clauses, classification, classification_level, operative_from, operative_to, published_year, version_number,\r\n             last_modified_datetime, published_year\". Example \"clause_fixed_id asc, classification_level asc\".\r\n             Where sort is not specified, the default sort is \"publishedYear\" descending and then by \"classificationLevel\" ascending.",
                        "type": "string"
                    }
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "List of Classifications for the given award",
                        "schema": {
                            "$ref": "#/definitions/GetClassificationsByAwardIdResponse"
                        },
                        "examples": {
                            "application/json": {
                                "_meta": {
                                    "current_page": 0,
                                    "page_count": 0,
                                    "limit": 0,
                                    "result_count": 0,
                                    "first_row_on_page": 0,
                                    "last_row_on_page": 0,
                                    "has_more_results": true,
                                    "has_previous_results": true
                                },
                                "results": [
                                    {
                                        "classification_fixed_id": 0,
                                        "clause_fixed_id": 0,
                                        "clauses": "string",
                                        "clause_description": "string",
                                        "parent_classification_name": "string",
                                        "classification": "string",
                                        "classification_level": 0,
                                        "next_down_classification_fixed_id": 0,
                                        "next_up_classification_fixed_id": 0,
                                        "operative_from": "string",
                                        "operative_to": "string",
                                        "version_number": 0,
                                        "last_modified_datetime": "string",
                                        "published_year": 0
                                    }
                                ],
                                "_links": [
                                    {
                                        "href": "string",
                                        "rel": "string",
                                        "method": "string"
                                    }
                                ]
                            },
                            "text/json": {
                                "_meta": {
                                    "current_page": 0,
                                    "page_count": 0,
                                    "limit": 0,
                                    "result_count": 0,
                                    "first_row_on_page": 0,
                                    "last_row_on_page": 0,
                                    "has_more_results": true,
                                    "has_previous_results": true
                                },
                                "results": [
                                    {
                                        "classification_fixed_id": 0,
                                        "clause_fixed_id": 0,
                                        "clauses": "string",
                                        "clause_description": "string",
                                        "parent_classification_name": "string",
                                        "classification": "string",
                                        "classification_level": 0,
                                        "next_down_classification_fixed_id": 0,
                                        "next_up_classification_fixed_id": 0,
                                        "operative_from": "string",
                                        "operative_to": "string",
                                        "version_number": 0,
                                        "last_modified_datetime": "string",
                                        "published_year": 0
                                    }
                                ],
                                "_links": [
                                    {
                                        "href": "string",
                                        "rel": "string",
                                        "method": "string"
                                    }
                                ]
                            },
                            "application/xml": "<GetClassificationsByAwardIdResponse>\r\n  <_meta>\r\n    <current_page>0</current_page>\r\n    <page_count>0</page_count>\r\n    <limit>0</limit>\r\n    <result_count>0</result_count>\r\n    <first_row_on_page>0</first_row_on_page>\r\n    <last_row_on_page>0</last_row_on_page>\r\n    <has_more_results>true</has_more_results>\r\n    <has_previous_results>true</has_previous_results>\r\n  </_meta>\r\n  <results>\r\n    <result>\r\n      <classification_fixed_id>0</classification_fixed_id>\r\n      <clause_fixed_id>0</clause_fixed_id>\r\n      <clauses>string</clauses>\r\n      <clause_description>string</clause_description>\r\n      <parent_classification_name>string</parent_classification_name>\r\n      <classification>string</classification>\r\n      <classification_level>0</classification_level>\r\n      <next_down_classification_fixed_id>0</next_down_classification_fixed_id>\r\n      <next_up_classification_fixed_id>0</next_up_classification_fixed_id>\r\n      <operative_from>string</operative_from>\r\n      <operative_to>string</operative_to>\r\n      <version_number>0</version_number>\r\n      <last_modified_datetime>string</last_modified_datetime>\r\n      <published_year>0</published_year>\r\n    </result>\r\n  </results>\r\n  <_links>\r\n    <_link>\r\n      <href>string</href>\r\n      <rel>string</rel>\r\n      <method>string</method>\r\n    </_link>\r\n  </_links>\r\n</GetClassificationsByAwardIdResponse>",
                            "text/xml": "<GetClassificationsByAwardIdResponse>\r\n  <_meta>\r\n    <current_page>0</current_page>\r\n    <page_count>0</page_count>\r\n    <limit>0</limit>\r\n    <result_count>0</result_count>\r\n    <first_row_on_page>0</first_row_on_page>\r\n    <last_row_on_page>0</last_row_on_page>\r\n    <has_more_results>true</has_more_results>\r\n    <has_previous_results>true</has_previous_results>\r\n  </_meta>\r\n  <results>\r\n    <result>\r\n      <classification_fixed_id>0</classification_fixed_id>\r\n      <clause_fixed_id>0</clause_fixed_id>\r\n      <clauses>string</clauses>\r\n      <clause_description>string</clause_description>\r\n      <parent_classification_name>string</parent_classification_name>\r\n      <classification>string</classification>\r\n      <classification_level>0</classification_level>\r\n      <next_down_classification_fixed_id>0</next_down_classification_fixed_id>\r\n      <next_up_classification_fixed_id>0</next_up_classification_fixed_id>\r\n      <operative_from>string</operative_from>\r\n      <operative_to>string</operative_to>\r\n      <version_number>0</version_number>\r\n      <last_modified_datetime>string</last_modified_datetime>\r\n      <published_year>0</published_year>\r\n    </result>\r\n  </results>\r\n  <_links>\r\n    <_link>\r\n      <href>string</href>\r\n      <rel>string</rel>\r\n      <method>string</method>\r\n    </_link>\r\n  </_links>\r\n</GetClassificationsByAwardIdResponse>"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "id": "string",
                                        "detail": "string",
                                        "code": "string",
                                        "source": {
                                            "parameter": "string",
                                            "pointer": "string"
                                        }
                                    }
                                ]
                            },
                            "text/json": {
                                "errors": [
                                    {
                                        "id": "string",
                                        "detail": "string",
                                        "code": "string",
                                        "source": {
                                            "parameter": "string",
                                            "pointer": "string"
                                        }
                                    }
                                ]
                            },
                            "application/xml": "<ApiError>\r\n  <errors>\r\n    <error>\r\n      <id>string</id>\r\n      <detail>string</detail>\r\n      <code>string</code>\r\n      <source>\r\n        <parameter>string</parameter>\r\n        <pointer>string</pointer>\r\n      </source>\r\n    </error>\r\n  </errors>\r\n</ApiError>",
                            "text/xml": "<ApiError>\r\n  <errors>\r\n    <error>\r\n      <id>string</id>\r\n      <detail>string</detail>\r\n      <code>string</code>\r\n      <source>\r\n        <parameter>string</parameter>\r\n        <pointer>string</pointer>\r\n      </source>\r\n    </error>\r\n  </errors>\r\n</ApiError>"
                        }
                    }
                }
            }
        },
        "/api/v1/awards/{id_or_code}/classifications/{classification_fixed_id}/pay-rates": {
            "get": {
                "description": "This API is designed to retrieve the current pay-rate of an individual classification for a specific award using a fixed identifier.\r\nWhere the query returns more than one result, the default sort is \"calculated_pay_rate_id\" ascending and then \"calculated_rate_type\" ascending.",
                "operationId": "IndividualPayRate",
                "summary": "Retrieve the current pay-rate for a classification using a fixed identifier.",
                "tags": [
                    "Classifications"
                ],
                "parameters": [
                    {
                        "name": "id_or_code",
                        "in": "path",
                        "description": "Search by \"award_fixed_id\" or \"code\". Example \"id_or_code=\"19\" or \"id_or_code\"=\"MA000019\".",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "classification_fixed_id",
                        "in": "path",
                        "description": "Format - int32. Unique identification number of classification that is fixed over each year. Example: \"classification_fixed_id\"=\"66\".",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Format - int32. The page requested for the Awards. Default: 1",
                        "type": "integer",
                        "default": 1,
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Format - int32. The limit for the results per page. Default: 10 and Maximum acceptable: 100",
                        "type": "integer",
                        "default": 10,
                        "format": "int32"
                    }
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "List of individual pay-rates",
                        "schema": {
                            "$ref": "#/definitions/GetIndividualPayRateByIdResponse"
                        },
                        "examples": {
                            "application/json": {
                                "_meta": {
                                    "current_page": 0,
                                    "page_count": 0,
                                    "limit": 0,
                                    "result_count": 0,
                                    "first_row_on_page": 0,
                                    "last_row_on_page": 0,
                                    "has_more_results": true,
                                    "has_previous_results": true
                                },
                                "results": [
                                    {
                                        "classification_fixed_id": 0,
                                        "base_pay_rate_id": "string",
                                        "base_rate_type": "string",
                                        "base_rate": 0,
                                        "calculated_pay_rate_id": "string",
                                        "calculated_rate_type": "string",
                                        "calculated_rate": 0,
                                        "parent_classification_name": "string",
                                        "classification": "string",
                                        "classification_level": 0,
                                        "employee_rate_type_code": "string",
                                        "operative_from": "string",
                                        "operative_to": "string",
                                        "version_number": 0,
                                        "published_year": 0,
                                        "last_modified_datetime": "string"
                                    }
                                ],
                                "_links": [
                                    {
                                        "href": "string",
                                        "rel": "string",
                                        "method": "string"
                                    }
                                ]
                            },
                            "text/json": {
                                "_meta": {
                                    "current_page": 0,
                                    "page_count": 0,
                                    "limit": 0,
                                    "result_count": 0,
                                    "first_row_on_page": 0,
                                    "last_row_on_page": 0,
                                    "has_more_results": true,
                                    "has_previous_results": true
                                },
                                "results": [
                                    {
                                        "classification_fixed_id": 0,
                                        "base_pay_rate_id": "string",
                                        "base_rate_type": "string",
                                        "base_rate": 0,
                                        "calculated_pay_rate_id": "string",
                                        "calculated_rate_type": "string",
                                        "calculated_rate": 0,
                                        "parent_classification_name": "string",
                                        "classification": "string",
                                        "classification_level": 0,
                                        "employee_rate_type_code": "string",
                                        "operative_from": "string",
                                        "operative_to": "string",
                                        "version_number": 0,
                                        "published_year": 0,
                                        "last_modified_datetime": "string"
                                    }
                                ],
                                "_links": [
                                    {
                                        "href": "string",
                                        "rel": "string",
                                        "method": "string"
                                    }
                                ]
                            },
                            "application/xml": "<GetIndividualPayRateByIdResponse>\r\n  <_meta>\r\n    <current_page>0</current_page>\r\n    <page_count>0</page_count>\r\n    <limit>0</limit>\r\n    <result_count>0</result_count>\r\n    <first_row_on_page>0</first_row_on_page>\r\n    <last_row_on_page>0</last_row_on_page>\r\n    <has_more_results>true</has_more_results>\r\n    <has_previous_results>true</has_previous_results>\r\n  </_meta>\r\n  <results>\r\n    <result>\r\n      <classification_fixed_id>0</classification_fixed_id>\r\n      <base_pay_rate_id>string</base_pay_rate_id>\r\n      <base_rate_type>string</base_rate_type>\r\n      <base_rate>0</base_rate>\r\n      <calculated_pay_rate_id>string</calculated_pay_rate_id>\r\n      <calculated_rate_type>string</calculated_rate_type>\r\n      <calculated_rate>0</calculated_rate>\r\n      <parent_classification_name>string</parent_classification_name>\r\n      <classification>string</classification>\r\n      <classification_level>0</classification_level>\r\n      <employee_rate_type_code>string</employee_rate_type_code>\r\n      <operative_from>string</operative_from>\r\n      <operative_to>string</operative_to>\r\n      <version_number>0</version_number>\r\n      <published_year>0</published_year>\r\n      <last_modified_datetime>string</last_modified_datetime>\r\n    </result>\r\n  </results>\r\n  <_links>\r\n    <_link>\r\n      <href>string</href>\r\n      <rel>string</rel>\r\n      <method>string</method>\r\n    </_link>\r\n  </_links>\r\n</GetIndividualPayRateByIdResponse>",
                            "text/xml": "<GetIndividualPayRateByIdResponse>\r\n  <_meta>\r\n    <current_page>0</current_page>\r\n    <page_count>0</page_count>\r\n    <limit>0</limit>\r\n    <result_count>0</result_count>\r\n    <first_row_on_page>0</first_row_on_page>\r\n    <last_row_on_page>0</last_row_on_page>\r\n    <has_more_results>true</has_more_results>\r\n    <has_previous_results>true</has_previous_results>\r\n  </_meta>\r\n  <results>\r\n    <result>\r\n      <classification_fixed_id>0</classification_fixed_id>\r\n      <base_pay_rate_id>string</base_pay_rate_id>\r\n      <base_rate_type>string</base_rate_type>\r\n      <base_rate>0</base_rate>\r\n      <calculated_pay_rate_id>string</calculated_pay_rate_id>\r\n      <calculated_rate_type>string</calculated_rate_type>\r\n      <calculated_rate>0</calculated_rate>\r\n      <parent_classification_name>string</parent_classification_name>\r\n      <classification>string</classification>\r\n      <classification_level>0</classification_level>\r\n      <employee_rate_type_code>string</employee_rate_type_code>\r\n      <operative_from>string</operative_from>\r\n      <operative_to>string</operative_to>\r\n      <version_number>0</version_number>\r\n      <published_year>0</published_year>\r\n      <last_modified_datetime>string</last_modified_datetime>\r\n    </result>\r\n  </results>\r\n  <_links>\r\n    <_link>\r\n      <href>string</href>\r\n      <rel>string</rel>\r\n      <method>string</method>\r\n    </_link>\r\n  </_links>\r\n</GetIndividualPayRateByIdResponse>"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "id": "string",
                                        "detail": "string",
                                        "code": "string",
                                        "source": {
                                            "parameter": "string",
                                            "pointer": "string"
                                        }
                                    }
                                ]
                            },
                            "text/json": {
                                "errors": [
                                    {
                                        "id": "string",
                                        "detail": "string",
                                        "code": "string",
                                        "source": {
                                            "parameter": "string",
                                            "pointer": "string"
                                        }
                                    }
                                ]
                            },
                            "application/xml": "<ApiError>\r\n  <errors>\r\n    <error>\r\n      <id>string</id>\r\n      <detail>string</detail>\r\n      <code>string</code>\r\n      <source>\r\n        <parameter>string</parameter>\r\n        <pointer>string</pointer>\r\n      </source>\r\n    </error>\r\n  </errors>\r\n</ApiError>",
                            "text/xml": "<ApiError>\r\n  <errors>\r\n    <error>\r\n      <id>string</id>\r\n      <detail>string</detail>\r\n      <code>string</code>\r\n      <source>\r\n        <parameter>string</parameter>\r\n        <pointer>string</pointer>\r\n      </source>\r\n    </error>\r\n  </errors>\r\n</ApiError>"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "id": "string",
                                        "detail": "string",
                                        "code": "string",
                                        "source": {
                                            "parameter": "string",
                                            "pointer": "string"
                                        }
                                    }
                                ]
                            },
                            "text/json": {
                                "errors": [
                                    {
                                        "id": "string",
                                        "detail": "string",
                                        "code": "string",
                                        "source": {
                                            "parameter": "string",
                                            "pointer": "string"
                                        }
                                    }
                                ]
                            },
                            "application/xml": "<ApiError>\r\n  <errors>\r\n    <error>\r\n      <id>string</id>\r\n      <detail>string</detail>\r\n      <code>string</code>\r\n      <source>\r\n        <parameter>string</parameter>\r\n        <pointer>string</pointer>\r\n      </source>\r\n    </error>\r\n  </errors>\r\n</ApiError>",
                            "text/xml": "<ApiError>\r\n  <errors>\r\n    <error>\r\n      <id>string</id>\r\n      <detail>string</detail>\r\n      <code>string</code>\r\n      <source>\r\n        <parameter>string</parameter>\r\n        <pointer>string</pointer>\r\n      </source>\r\n    </error>\r\n  </errors>\r\n</ApiError>"
                        }
                    }
                }
            }
        },
        "/api/v1/awards/{id_or_code}/classifications/{classification_fixed_id}": {
            "get": {
                "description": "This API is designed to retrieve a current individual classification for a specific award using a fixed identifier.",
                "operationId": "IndividualClassification",
                "summary": "Retrieve a current individual classification using a fixed identifier.",
                "tags": [
                    "Classifications"
                ],
                "parameters": [
                    {
                        "name": "id_or_code",
                        "in": "path",
                        "description": "Search by \"award_fixed_id\" or \"code\". Example \"id_or_code=\"19\" or \"id_or_code\"=\"MA000002\".",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "classification_fixed_id",
                        "in": "path",
                        "description": "Format - int32. Unique identification number of classification that is fixed over each year. Example: \"classification_fixed_id\"=\"98\".",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Returns Classification with latest published year",
                        "schema": {
                            "$ref": "#/definitions/GetIndividualClassificationByIdResponse"
                        },
                        "examples": {
                            "application/json": {
                                "_meta": {},
                                "result": {
                                    "classification_fixed_id": 0,
                                    "clause_fixed_id": 0,
                                    "clauses": "string",
                                    "clause_description": "string",
                                    "parent_classification_name": "string",
                                    "classification": "string",
                                    "classification_level": 0,
                                    "next_down_classification_fixed_id": 0,
                                    "next_up_classification_fixed_id": 0,
                                    "operative_from": "string",
                                    "operative_to": "string",
                                    "version_number": 0,
                                    "last_modified_datetime": "string",
                                    "published_year": 0
                                },
                                "_links": [
                                    {
                                        "href": "string",
                                        "rel": "string",
                                        "method": "string"
                                    }
                                ]
                            },
                            "text/json": {
                                "_meta": {},
                                "result": {
                                    "classification_fixed_id": 0,
                                    "clause_fixed_id": 0,
                                    "clauses": "string",
                                    "clause_description": "string",
                                    "parent_classification_name": "string",
                                    "classification": "string",
                                    "classification_level": 0,
                                    "next_down_classification_fixed_id": 0,
                                    "next_up_classification_fixed_id": 0,
                                    "operative_from": "string",
                                    "operative_to": "string",
                                    "version_number": 0,
                                    "last_modified_datetime": "string",
                                    "published_year": 0
                                },
                                "_links": [
                                    {
                                        "href": "string",
                                        "rel": "string",
                                        "method": "string"
                                    }
                                ]
                            },
                            "application/xml": "<GetIndividualClassificationByIdResponse>\r\n  <_meta />\r\n  <result>\r\n    <classification_fixed_id>0</classification_fixed_id>\r\n    <clause_fixed_id>0</clause_fixed_id>\r\n    <clauses>string</clauses>\r\n    <clause_description>string</clause_description>\r\n    <parent_classification_name>string</parent_classification_name>\r\n    <classification>string</classification>\r\n    <classification_level>0</classification_level>\r\n    <next_down_classification_fixed_id>0</next_down_classification_fixed_id>\r\n    <next_up_classification_fixed_id>0</next_up_classification_fixed_id>\r\n    <operative_from>string</operative_from>\r\n    <operative_to>string</operative_to>\r\n    <version_number>0</version_number>\r\n    <last_modified_datetime>string</last_modified_datetime>\r\n    <published_year>0</published_year>\r\n  </result>\r\n  <_links>\r\n    <_link>\r\n      <href>string</href>\r\n      <rel>string</rel>\r\n      <method>string</method>\r\n    </_link>\r\n  </_links>\r\n</GetIndividualClassificationByIdResponse>",
                            "text/xml": "<GetIndividualClassificationByIdResponse>\r\n  <_meta />\r\n  <result>\r\n    <classification_fixed_id>0</classification_fixed_id>\r\n    <clause_fixed_id>0</clause_fixed_id>\r\n    <clauses>string</clauses>\r\n    <clause_description>string</clause_description>\r\n    <parent_classification_name>string</parent_classification_name>\r\n    <classification>string</classification>\r\n    <classification_level>0</classification_level>\r\n    <next_down_classification_fixed_id>0</next_down_classification_fixed_id>\r\n    <next_up_classification_fixed_id>0</next_up_classification_fixed_id>\r\n    <operative_from>string</operative_from>\r\n    <operative_to>string</operative_to>\r\n    <version_number>0</version_number>\r\n    <last_modified_datetime>string</last_modified_datetime>\r\n    <published_year>0</published_year>\r\n  </result>\r\n  <_links>\r\n    <_link>\r\n      <href>string</href>\r\n      <rel>string</rel>\r\n      <method>string</method>\r\n    </_link>\r\n  </_links>\r\n</GetIndividualClassificationByIdResponse>"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "id": "string",
                                        "detail": "string",
                                        "code": "string",
                                        "source": {
                                            "parameter": "string",
                                            "pointer": "string"
                                        }
                                    }
                                ]
                            },
                            "text/json": {
                                "errors": [
                                    {
                                        "id": "string",
                                        "detail": "string",
                                        "code": "string",
                                        "source": {
                                            "parameter": "string",
                                            "pointer": "string"
                                        }
                                    }
                                ]
                            },
                            "application/xml": "<ApiError>\r\n  <errors>\r\n    <error>\r\n      <id>string</id>\r\n      <detail>string</detail>\r\n      <code>string</code>\r\n      <source>\r\n        <parameter>string</parameter>\r\n        <pointer>string</pointer>\r\n      </source>\r\n    </error>\r\n  </errors>\r\n</ApiError>",
                            "text/xml": "<ApiError>\r\n  <errors>\r\n    <error>\r\n      <id>string</id>\r\n      <detail>string</detail>\r\n      <code>string</code>\r\n      <source>\r\n        <parameter>string</parameter>\r\n        <pointer>string</pointer>\r\n      </source>\r\n    </error>\r\n  </errors>\r\n</ApiError>"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "id": "string",
                                        "detail": "string",
                                        "code": "string",
                                        "source": {
                                            "parameter": "string",
                                            "pointer": "string"
                                        }
                                    }
                                ]
                            },
                            "text/json": {
                                "errors": [
                                    {
                                        "id": "string",
                                        "detail": "string",
                                        "code": "string",
                                        "source": {
                                            "parameter": "string",
                                            "pointer": "string"
                                        }
                                    }
                                ]
                            },
                            "application/xml": "<ApiError>\r\n  <errors>\r\n    <error>\r\n      <id>string</id>\r\n      <detail>string</detail>\r\n      <code>string</code>\r\n      <source>\r\n        <parameter>string</parameter>\r\n        <pointer>string</pointer>\r\n      </source>\r\n    </error>\r\n  </errors>\r\n</ApiError>",
                            "text/xml": "<ApiError>\r\n  <errors>\r\n    <error>\r\n      <id>string</id>\r\n      <detail>string</detail>\r\n      <code>string</code>\r\n      <source>\r\n        <parameter>string</parameter>\r\n        <pointer>string</pointer>\r\n      </source>\r\n    </error>\r\n  </errors>\r\n</ApiError>"
                        }
                    }
                }
            }
        },
        "/api/v1/awards/{id_or_code}/expense-allowances": {
            "get": {
                "description": "This API is designed to retrieve the expense-related allowance for a specific award using the \"award_fixed_id\" or the award \"code\" to support payroll business processes.",
                "operationId": "ExpenseAllowances",
                "summary": "Retrieve award expense-related allowance information using an award identifier.",
                "tags": [
                    "ExpenseAllowances"
                ],
                "parameters": [
                    {
                        "name": "id_or_code",
                        "in": "path",
                        "description": "Search by \"award_fixed_id\" or \"code\". Example: \"id_or_code=\"12\" OR \"id_or_code\"=\"MA000012\"",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "is_all_purpose",
                        "in": "query",
                        "description": "Used to flag whether an allowance applies for all purposes. The default value is null (\"--\"). Example: \"true\" or \"false\"",
                        "type": "boolean"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Format - int32. The page requested of the results retrieved. Default: 1",
                        "type": "integer",
                        "default": 1,
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Format - int32. The limit for the results per page. Default: 10 and Maximum acceptable: 100",
                        "type": "integer",
                        "default": 10,
                        "format": "int32"
                    },
                    {
                        "name": "operative_from",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). The date on which the allowance came into effect. The default format is \"YYYY-MM-DD\".",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "operative_to",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). The date on which the allowance ceased to be in effect. The default format is \"YYYY-MM-DD\".",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "allowance",
                        "in": "query",
                        "description": "The textual description of the allowance. Separated by ', ' Eg: Meal allowance, Vehicle",
                        "type": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Can be sorted using \"clause_fixed_id, clauses, allowance, is_all_purpose, operative_from, operative_to, published_year,\r\n             version_number, last_modified_datetime, version_number\". Example \"clause_fixed_id asc, published_year desc\".\r\n             Where sort is not specified, the default sort is \"published_year\" descending and then by \"allowance\" ascending.",
                        "type": "string"
                    }
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "List of Expense Allowances for the given award",
                        "schema": {
                            "$ref": "#/definitions/GetExpenseAllowanceByAwardIdResponse"
                        },
                        "examples": {
                            "application/json": {
                                "_meta": {
                                    "current_page": 0,
                                    "page_count": 0,
                                    "limit": 0,
                                    "result_count": 0,
                                    "first_row_on_page": 0,
                                    "last_row_on_page": 0,
                                    "has_more_results": true,
                                    "has_previous_results": true
                                },
                                "results": [
                                    {
                                        "expense_allowance_fixed_id": 0,
                                        "clause_fixed_id": 0,
                                        "clauses": "string",
                                        "parent_allowance": "string",
                                        "allowance": "string",
                                        "is_all_purpose": true,
                                        "allowance_amount": 0,
                                        "payment_frequency": "string",
                                        "last_adjusted_year": 0,
                                        "cpi_quarter_last_adjusted": "string",
                                        "operative_from": "string",
                                        "operative_to": "string",
                                        "version_number": 0,
                                        "last_modified_datetime": "string",
                                        "published_year": 0
                                    }
                                ],
                                "_links": [
                                    {
                                        "href": "string",
                                        "rel": "string",
                                        "method": "string"
                                    }
                                ]
                            },
                            "text/json": {
                                "_meta": {
                                    "current_page": 0,
                                    "page_count": 0,
                                    "limit": 0,
                                    "result_count": 0,
                                    "first_row_on_page": 0,
                                    "last_row_on_page": 0,
                                    "has_more_results": true,
                                    "has_previous_results": true
                                },
                                "results": [
                                    {
                                        "expense_allowance_fixed_id": 0,
                                        "clause_fixed_id": 0,
                                        "clauses": "string",
                                        "parent_allowance": "string",
                                        "allowance": "string",
                                        "is_all_purpose": true,
                                        "allowance_amount": 0,
                                        "payment_frequency": "string",
                                        "last_adjusted_year": 0,
                                        "cpi_quarter_last_adjusted": "string",
                                        "operative_from": "string",
                                        "operative_to": "string",
                                        "version_number": 0,
                                        "last_modified_datetime": "string",
                                        "published_year": 0
                                    }
                                ],
                                "_links": [
                                    {
                                        "href": "string",
                                        "rel": "string",
                                        "method": "string"
                                    }
                                ]
                            },
                            "application/xml": "<GetExpenseAllowanceByAwardIdResponse>\r\n  <_meta>\r\n    <current_page>0</current_page>\r\n    <page_count>0</page_count>\r\n    <limit>0</limit>\r\n    <result_count>0</result_count>\r\n    <first_row_on_page>0</first_row_on_page>\r\n    <last_row_on_page>0</last_row_on_page>\r\n    <has_more_results>true</has_more_results>\r\n    <has_previous_results>true</has_previous_results>\r\n  </_meta>\r\n  <results>\r\n    <result>\r\n      <expense_allowance_fixed_id>0</expense_allowance_fixed_id>\r\n      <clause_fixed_id>0</clause_fixed_id>\r\n      <clauses>string</clauses>\r\n      <parent_allowance>string</parent_allowance>\r\n      <allowance>string</allowance>\r\n      <is_all_purpose>true</is_all_purpose>\r\n      <allowance_amount>0</allowance_amount>\r\n      <payment_frequency>string</payment_frequency>\r\n      <last_adjusted_year>0</last_adjusted_year>\r\n      <cpi_quarter_last_adjusted>string</cpi_quarter_last_adjusted>\r\n      <operative_from>string</operative_from>\r\n      <operative_to>string</operative_to>\r\n      <version_number>0</version_number>\r\n      <last_modified_datetime>string</last_modified_datetime>\r\n      <published_year>0</published_year>\r\n    </result>\r\n  </results>\r\n  <_links>\r\n    <_link>\r\n      <href>string</href>\r\n      <rel>string</rel>\r\n      <method>string</method>\r\n    </_link>\r\n  </_links>\r\n</GetExpenseAllowanceByAwardIdResponse>",
                            "text/xml": "<GetExpenseAllowanceByAwardIdResponse>\r\n  <_meta>\r\n    <current_page>0</current_page>\r\n    <page_count>0</page_count>\r\n    <limit>0</limit>\r\n    <result_count>0</result_count>\r\n    <first_row_on_page>0</first_row_on_page>\r\n    <last_row_on_page>0</last_row_on_page>\r\n    <has_more_results>true</has_more_results>\r\n    <has_previous_results>true</has_previous_results>\r\n  </_meta>\r\n  <results>\r\n    <result>\r\n      <expense_allowance_fixed_id>0</expense_allowance_fixed_id>\r\n      <clause_fixed_id>0</clause_fixed_id>\r\n      <clauses>string</clauses>\r\n      <parent_allowance>string</parent_allowance>\r\n      <allowance>string</allowance>\r\n      <is_all_purpose>true</is_all_purpose>\r\n      <allowance_amount>0</allowance_amount>\r\n      <payment_frequency>string</payment_frequency>\r\n      <last_adjusted_year>0</last_adjusted_year>\r\n      <cpi_quarter_last_adjusted>string</cpi_quarter_last_adjusted>\r\n      <operative_from>string</operative_from>\r\n      <operative_to>string</operative_to>\r\n      <version_number>0</version_number>\r\n      <last_modified_datetime>string</last_modified_datetime>\r\n      <published_year>0</published_year>\r\n    </result>\r\n  </results>\r\n  <_links>\r\n    <_link>\r\n      <href>string</href>\r\n      <rel>string</rel>\r\n      <method>string</method>\r\n    </_link>\r\n  </_links>\r\n</GetExpenseAllowanceByAwardIdResponse>"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "id": "string",
                                        "detail": "string",
                                        "code": "string",
                                        "source": {
                                            "parameter": "string",
                                            "pointer": "string"
                                        }
                                    }
                                ]
                            },
                            "text/json": {
                                "errors": [
                                    {
                                        "id": "string",
                                        "detail": "string",
                                        "code": "string",
                                        "source": {
                                            "parameter": "string",
                                            "pointer": "string"
                                        }
                                    }
                                ]
                            },
                            "application/xml": "<ApiError>\r\n  <errors>\r\n    <error>\r\n      <id>string</id>\r\n      <detail>string</detail>\r\n      <code>string</code>\r\n      <source>\r\n        <parameter>string</parameter>\r\n        <pointer>string</pointer>\r\n      </source>\r\n    </error>\r\n  </errors>\r\n</ApiError>",
                            "text/xml": "<ApiError>\r\n  <errors>\r\n    <error>\r\n      <id>string</id>\r\n      <detail>string</detail>\r\n      <code>string</code>\r\n      <source>\r\n        <parameter>string</parameter>\r\n        <pointer>string</pointer>\r\n      </source>\r\n    </error>\r\n  </errors>\r\n</ApiError>"
                        }
                    }
                }
            }
        },
        "/api/v1/awards/{id_or_code}/expense-allowances/{expense_allowance_fixed_id}": {
            "get": {
                "description": "This API is designed to retrieve a current individual expense-related allowance for a specific award using a fixed identifier.",
                "operationId": "IndividualExpenseAllowance",
                "summary": "Retrieve a current individual expense-related allowance using a fixed identifier.",
                "tags": [
                    "ExpenseAllowances"
                ],
                "parameters": [
                    {
                        "name": "id_or_code",
                        "in": "path",
                        "description": "Search by \"award_fixed_id\" or \"code\". Example: \"id_or_code=\"12\" OR \"id_or_code\"=\"MA000012\"",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "expense_allowance_fixed_id",
                        "in": "path",
                        "description": "Format - int32. Unique identification number of the expense-related allowance that is fixed over each year.\r\n             Example \"expense_allowance_fixed_id\"=\"9\"",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Expense Allowance data for the given Award Id or Award Code and expense allowance fixed id",
                        "schema": {
                            "$ref": "#/definitions/GetIndividualExpenseAllowanceByIdResponse"
                        },
                        "examples": {
                            "application/json": {
                                "_meta": {},
                                "result": {
                                    "expense_allowance_fixed_id": 0,
                                    "clause_fixed_id": 0,
                                    "clauses": "string",
                                    "parent_allowance": "string",
                                    "allowance": "string",
                                    "is_all_purpose": true,
                                    "allowance_amount": 0,
                                    "payment_frequency": "string",
                                    "last_adjusted_year": 0,
                                    "cpi_quarter_last_adjusted": "string",
                                    "operative_from": "string",
                                    "operative_to": "string",
                                    "version_number": 0,
                                    "last_modified_datetime": "string",
                                    "published_year": 0
                                },
                                "_links": [
                                    {
                                        "href": "string",
                                        "rel": "string",
                                        "method": "string"
                                    }
                                ]
                            },
                            "text/json": {
                                "_meta": {},
                                "result": {
                                    "expense_allowance_fixed_id": 0,
                                    "clause_fixed_id": 0,
                                    "clauses": "string",
                                    "parent_allowance": "string",
                                    "allowance": "string",
                                    "is_all_purpose": true,
                                    "allowance_amount": 0,
                                    "payment_frequency": "string",
                                    "last_adjusted_year": 0,
                                    "cpi_quarter_last_adjusted": "string",
                                    "operative_from": "string",
                                    "operative_to": "string",
                                    "version_number": 0,
                                    "last_modified_datetime": "string",
                                    "published_year": 0
                                },
                                "_links": [
                                    {
                                        "href": "string",
                                        "rel": "string",
                                        "method": "string"
                                    }
                                ]
                            },
                            "application/xml": "<GetIndividualExpenseAllowanceByIdResponse>\r\n  <_meta />\r\n  <result>\r\n    <expense_allowance_fixed_id>0</expense_allowance_fixed_id>\r\n    <clause_fixed_id>0</clause_fixed_id>\r\n    <clauses>string</clauses>\r\n    <parent_allowance>string</parent_allowance>\r\n    <allowance>string</allowance>\r\n    <is_all_purpose>true</is_all_purpose>\r\n    <allowance_amount>0</allowance_amount>\r\n    <payment_frequency>string</payment_frequency>\r\n    <last_adjusted_year>0</last_adjusted_year>\r\n    <cpi_quarter_last_adjusted>string</cpi_quarter_last_adjusted>\r\n    <operative_from>string</operative_from>\r\n    <operative_to>string</operative_to>\r\n    <version_number>0</version_number>\r\n    <last_modified_datetime>string</last_modified_datetime>\r\n    <published_year>0</published_year>\r\n  </result>\r\n  <_links>\r\n    <_link>\r\n      <href>string</href>\r\n      <rel>string</rel>\r\n      <method>string</method>\r\n    </_link>\r\n  </_links>\r\n</GetIndividualExpenseAllowanceByIdResponse>",
                            "text/xml": "<GetIndividualExpenseAllowanceByIdResponse>\r\n  <_meta />\r\n  <result>\r\n    <expense_allowance_fixed_id>0</expense_allowance_fixed_id>\r\n    <clause_fixed_id>0</clause_fixed_id>\r\n    <clauses>string</clauses>\r\n    <parent_allowance>string</parent_allowance>\r\n    <allowance>string</allowance>\r\n    <is_all_purpose>true</is_all_purpose>\r\n    <allowance_amount>0</allowance_amount>\r\n    <payment_frequency>string</payment_frequency>\r\n    <last_adjusted_year>0</last_adjusted_year>\r\n    <cpi_quarter_last_adjusted>string</cpi_quarter_last_adjusted>\r\n    <operative_from>string</operative_from>\r\n    <operative_to>string</operative_to>\r\n    <version_number>0</version_number>\r\n    <last_modified_datetime>string</last_modified_datetime>\r\n    <published_year>0</published_year>\r\n  </result>\r\n  <_links>\r\n    <_link>\r\n      <href>string</href>\r\n      <rel>string</rel>\r\n      <method>string</method>\r\n    </_link>\r\n  </_links>\r\n</GetIndividualExpenseAllowanceByIdResponse>"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "id": "string",
                                        "detail": "string",
                                        "code": "string",
                                        "source": {
                                            "parameter": "string",
                                            "pointer": "string"
                                        }
                                    }
                                ]
                            },
                            "text/json": {
                                "errors": [
                                    {
                                        "id": "string",
                                        "detail": "string",
                                        "code": "string",
                                        "source": {
                                            "parameter": "string",
                                            "pointer": "string"
                                        }
                                    }
                                ]
                            },
                            "application/xml": "<ApiError>\r\n  <errors>\r\n    <error>\r\n      <id>string</id>\r\n      <detail>string</detail>\r\n      <code>string</code>\r\n      <source>\r\n        <parameter>string</parameter>\r\n        <pointer>string</pointer>\r\n      </source>\r\n    </error>\r\n  </errors>\r\n</ApiError>",
                            "text/xml": "<ApiError>\r\n  <errors>\r\n    <error>\r\n      <id>string</id>\r\n      <detail>string</detail>\r\n      <code>string</code>\r\n      <source>\r\n        <parameter>string</parameter>\r\n        <pointer>string</pointer>\r\n      </source>\r\n    </error>\r\n  </errors>\r\n</ApiError>"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "id": "string",
                                        "detail": "string",
                                        "code": "string",
                                        "source": {
                                            "parameter": "string",
                                            "pointer": "string"
                                        }
                                    }
                                ]
                            },
                            "text/json": {
                                "errors": [
                                    {
                                        "id": "string",
                                        "detail": "string",
                                        "code": "string",
                                        "source": {
                                            "parameter": "string",
                                            "pointer": "string"
                                        }
                                    }
                                ]
                            },
                            "application/xml": "<ApiError>\r\n  <errors>\r\n    <error>\r\n      <id>string</id>\r\n      <detail>string</detail>\r\n      <code>string</code>\r\n      <source>\r\n        <parameter>string</parameter>\r\n        <pointer>string</pointer>\r\n      </source>\r\n    </error>\r\n  </errors>\r\n</ApiError>",
                            "text/xml": "<ApiError>\r\n  <errors>\r\n    <error>\r\n      <id>string</id>\r\n      <detail>string</detail>\r\n      <code>string</code>\r\n      <source>\r\n        <parameter>string</parameter>\r\n        <pointer>string</pointer>\r\n      </source>\r\n    </error>\r\n  </errors>\r\n</ApiError>"
                        }
                    }
                }
            }
        },
        "/api/v1/awards/{id_or_code}/penalties": {
            "get": {
                "description": "This API is designed to retrieve the penalties for a given award using the \"award_fixed_id\" or award \"code\" to support payroll business processes.",
                "operationId": "PenaltyModel",
                "summary": "Retrieve all the penalties for an award using an award identifier.",
                "tags": [
                    "Penalties"
                ],
                "parameters": [
                    {
                        "name": "id_or_code",
                        "in": "path",
                        "description": "Search by \"award_fixed_id\" or \"code\". Example: \"id_or_code=\"12\" OR \"id_or_code\"=\"MA000012\"",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "penalty_fixed_id",
                        "in": "query",
                        "description": "Format - int32. Unique identification number of the penalty that is fixed over time.",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "classification_level",
                        "in": "query",
                        "description": "Format - int32. A numerical representation of the classification within the hierarchical structure of classifications in a clause.\r\n             Starts at 1 for the lowest level classification. Example: \"classification_level\"=\"1\"",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "employee_rate_type_code",
                        "in": "query",
                        "description": "An indicator if the rate is for an adult or otherwise. Go to Documentation Guide, <b>[Penalty](https://developer.fwc.gov.au/glossary)</b> tab for the categories.\r\n             Search with a comma (\",\") delimiter to allow multiple codes. Example: \"employee_rate_type_code\"=\"AD\" or \"employee_rate_type_code\"=\"AD,TN\"",
                        "type": "string"
                    },
                    {
                        "name": "penalty_description",
                        "in": "query",
                        "description": "The API’s behaviour can be modified using the penalty_description(\"Ordinary hours\"  or \"Monday to Saturday – first 3 hours\").",
                        "type": "string"
                    },
                    {
                        "name": "base_pay_rate_Id",
                        "in": "query",
                        "description": "A unique identification number of the base pay-rate resource used to calculate the penalty value. Example \"basePayRateId=123456\"",
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Format - int32. The page requested of the results retrieved. Default: 1",
                        "type": "integer",
                        "default": 1,
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Format - int32. The limit for the results per page. Default: 10 and Maximum acceptable: 100",
                        "type": "integer",
                        "default": 10,
                        "format": "int32"
                    },
                    {
                        "name": "operative_from",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). The date on which the penalty rate came into effect. The default format is \"YYYY-MM-DD\".",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "operative_to",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). The date on which the penalty rate ceased to be in effect. The default format is \"YYYY-MM-DD\".",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Can be sorted using \"clause_fixed_id, classification_level, penalty_code, penalty_description, employee_rate_type_code, operative_from, operative_to,\r\n             published_year, version_number, last_modified_datetime\". Example: \"published_year desc, clause_fixed_id asc, classification_level desc\"",
                        "type": "string"
                    }
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "List of Penalties for the given award",
                        "schema": {
                            "$ref": "#/definitions/GetPenaltiesByAwardIdResponse"
                        },
                        "examples": {
                            "application/json": {
                                "_meta": {
                                    "current_page": 0,
                                    "page_count": 0,
                                    "limit": 0,
                                    "result_count": 0,
                                    "first_row_on_page": 0,
                                    "last_row_on_page": 0,
                                    "has_more_results": true,
                                    "has_previous_results": true
                                },
                                "results": [
                                    {
                                        "penalty_fixed_id": 0,
                                        "clause_fixed_id": 0,
                                        "clause_description": "string",
                                        "classification_level": 0,
                                        "penalty_description": "string",
                                        "rate": 0,
                                        "employee_rate_type_code": "string",
                                        "penalty_calculated_value": 0,
                                        "calculated_includes_all_purpose": true,
                                        "base_pay_rate_id": "string",
                                        "operative_from": "string",
                                        "operative_to": "string",
                                        "version_number": 0,
                                        "published_year": 0,
                                        "last_modified_datetime": "string"
                                    }
                                ],
                                "_links": [
                                    {
                                        "href": "string",
                                        "rel": "string",
                                        "method": "string"
                                    }
                                ]
                            },
                            "text/json": {
                                "_meta": {
                                    "current_page": 0,
                                    "page_count": 0,
                                    "limit": 0,
                                    "result_count": 0,
                                    "first_row_on_page": 0,
                                    "last_row_on_page": 0,
                                    "has_more_results": true,
                                    "has_previous_results": true
                                },
                                "results": [
                                    {
                                        "penalty_fixed_id": 0,
                                        "clause_fixed_id": 0,
                                        "clause_description": "string",
                                        "classification_level": 0,
                                        "penalty_description": "string",
                                        "rate": 0,
                                        "employee_rate_type_code": "string",
                                        "penalty_calculated_value": 0,
                                        "calculated_includes_all_purpose": true,
                                        "base_pay_rate_id": "string",
                                        "operative_from": "string",
                                        "operative_to": "string",
                                        "version_number": 0,
                                        "published_year": 0,
                                        "last_modified_datetime": "string"
                                    }
                                ],
                                "_links": [
                                    {
                                        "href": "string",
                                        "rel": "string",
                                        "method": "string"
                                    }
                                ]
                            },
                            "application/xml": "<GetPenaltiesByAwardIdResponse>\r\n  <_meta>\r\n    <current_page>0</current_page>\r\n    <page_count>0</page_count>\r\n    <limit>0</limit>\r\n    <result_count>0</result_count>\r\n    <first_row_on_page>0</first_row_on_page>\r\n    <last_row_on_page>0</last_row_on_page>\r\n    <has_more_results>true</has_more_results>\r\n    <has_previous_results>true</has_previous_results>\r\n  </_meta>\r\n  <results>\r\n    <result>\r\n      <penalty_fixed_id>0</penalty_fixed_id>\r\n      <clause_fixed_id>0</clause_fixed_id>\r\n      <clause_description>string</clause_description>\r\n      <classification_level>0</classification_level>\r\n      <penalty_description>string</penalty_description>\r\n      <rate>0</rate>\r\n      <employee_rate_type_code>string</employee_rate_type_code>\r\n      <penalty_calculated_value>0</penalty_calculated_value>\r\n      <calculated_includes_all_purpose>true</calculated_includes_all_purpose>\r\n      <base_pay_rate_id>string</base_pay_rate_id>\r\n      <operative_from>string</operative_from>\r\n      <operative_to>string</operative_to>\r\n      <version_number>0</version_number>\r\n      <published_year>0</published_year>\r\n      <last_modified_datetime>string</last_modified_datetime>\r\n    </result>\r\n  </results>\r\n  <_links>\r\n    <_link>\r\n      <href>string</href>\r\n      <rel>string</rel>\r\n      <method>string</method>\r\n    </_link>\r\n  </_links>\r\n</GetPenaltiesByAwardIdResponse>",
                            "text/xml": "<GetPenaltiesByAwardIdResponse>\r\n  <_meta>\r\n    <current_page>0</current_page>\r\n    <page_count>0</page_count>\r\n    <limit>0</limit>\r\n    <result_count>0</result_count>\r\n    <first_row_on_page>0</first_row_on_page>\r\n    <last_row_on_page>0</last_row_on_page>\r\n    <has_more_results>true</has_more_results>\r\n    <has_previous_results>true</has_previous_results>\r\n  </_meta>\r\n  <results>\r\n    <result>\r\n      <penalty_fixed_id>0</penalty_fixed_id>\r\n      <clause_fixed_id>0</clause_fixed_id>\r\n      <clause_description>string</clause_description>\r\n      <classification_level>0</classification_level>\r\n      <penalty_description>string</penalty_description>\r\n      <rate>0</rate>\r\n      <employee_rate_type_code>string</employee_rate_type_code>\r\n      <penalty_calculated_value>0</penalty_calculated_value>\r\n      <calculated_includes_all_purpose>true</calculated_includes_all_purpose>\r\n      <base_pay_rate_id>string</base_pay_rate_id>\r\n      <operative_from>string</operative_from>\r\n      <operative_to>string</operative_to>\r\n      <version_number>0</version_number>\r\n      <published_year>0</published_year>\r\n      <last_modified_datetime>string</last_modified_datetime>\r\n    </result>\r\n  </results>\r\n  <_links>\r\n    <_link>\r\n      <href>string</href>\r\n      <rel>string</rel>\r\n      <method>string</method>\r\n    </_link>\r\n  </_links>\r\n</GetPenaltiesByAwardIdResponse>"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "id": "string",
                                        "detail": "string",
                                        "code": "string",
                                        "source": {
                                            "parameter": "string",
                                            "pointer": "string"
                                        }
                                    }
                                ]
                            },
                            "text/json": {
                                "errors": [
                                    {
                                        "id": "string",
                                        "detail": "string",
                                        "code": "string",
                                        "source": {
                                            "parameter": "string",
                                            "pointer": "string"
                                        }
                                    }
                                ]
                            },
                            "application/xml": "<ApiError>\r\n  <errors>\r\n    <error>\r\n      <id>string</id>\r\n      <detail>string</detail>\r\n      <code>string</code>\r\n      <source>\r\n        <parameter>string</parameter>\r\n        <pointer>string</pointer>\r\n      </source>\r\n    </error>\r\n  </errors>\r\n</ApiError>",
                            "text/xml": "<ApiError>\r\n  <errors>\r\n    <error>\r\n      <id>string</id>\r\n      <detail>string</detail>\r\n      <code>string</code>\r\n      <source>\r\n        <parameter>string</parameter>\r\n        <pointer>string</pointer>\r\n      </source>\r\n    </error>\r\n  </errors>\r\n</ApiError>"
                        }
                    }
                }
            }
        },
        "/api/v1/awards/{id_or_code}/wage-allowances": {
            "get": {
                "description": "This API is designed to retrieve the wage-related allowance data for a specific award using the \"award_fixed_id\" or the award \"code\" to support payroll business processes.",
                "operationId": "WageAllowanceModel",
                "summary": "Retrieve award wage-related allowance information using an award identifier.",
                "tags": [
                    "WageAllowances"
                ],
                "parameters": [
                    {
                        "name": "id_or_code",
                        "in": "path",
                        "description": "Search by \"award_fixed_id\" or \"code\". Example: \"id_or_code=\"12\" OR \"id_or_code\"=\"MA000012\"",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "is_all_purpose",
                        "in": "query",
                        "description": "Used to flag whether an allowance applies for all purposes. The default value is null (\"--\"). Example: \"true\" or \"false\"",
                        "type": "boolean"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Format - int32. The page requested of the results retrieved. Default: 1",
                        "type": "integer",
                        "default": 1,
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Format - int32. The limit for the results per page. Default: 10 and Maximum acceptable: 100",
                        "type": "integer",
                        "default": 10,
                        "format": "int32"
                    },
                    {
                        "name": "operative_from",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). The date on which the allowance came into effect. The default format is \"YYYY-MM-DD\".",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "operative_to",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). The date on which the allowance ceased to be in effect. The default format is \"YYYY-MM-DD\".",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "allowance",
                        "in": "query",
                        "description": "The textual description of the allowance. Separated by ', ' Eg: First aid allowance, Industry allowance",
                        "type": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Can be sorted using \"clause_fixed_id, clauses, is_all_purpose, allowance, operative_from, operative_to, published_year,\r\n             version_number, last_modified_datetime\". Example: \"clause_fixed_id asc, operative_from asc\" Where sort is not specified,\r\n             the default sort is \"published_year\" descending and then by \"allowance\" ascending.",
                        "type": "string"
                    }
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "List of Wage Allowances for the given award",
                        "schema": {
                            "$ref": "#/definitions/GetWageAllowancesByAwardIdResponse"
                        },
                        "examples": {
                            "application/json": {
                                "_meta": {
                                    "current_page": 0,
                                    "page_count": 0,
                                    "limit": 0,
                                    "result_count": 0,
                                    "first_row_on_page": 0,
                                    "last_row_on_page": 0,
                                    "has_more_results": true,
                                    "has_previous_results": true
                                },
                                "results": [
                                    {
                                        "wage_allowance_fixed_id": 0,
                                        "clause_fixed_id": 0,
                                        "clauses": "string",
                                        "parent_allowance": "string",
                                        "allowance": "string",
                                        "is_all_purpose": true,
                                        "rate": 0,
                                        "rate_unit": "string",
                                        "base_pay_rate_id": "string",
                                        "allowance_amount": 0,
                                        "payment_frequency": "string",
                                        "operative_from": "string",
                                        "operative_to": "string",
                                        "version_number": 0,
                                        "last_modified_datetime": "string",
                                        "published_year": 0
                                    }
                                ],
                                "_links": [
                                    {
                                        "href": "string",
                                        "rel": "string",
                                        "method": "string"
                                    }
                                ]
                            },
                            "text/json": {
                                "_meta": {
                                    "current_page": 0,
                                    "page_count": 0,
                                    "limit": 0,
                                    "result_count": 0,
                                    "first_row_on_page": 0,
                                    "last_row_on_page": 0,
                                    "has_more_results": true,
                                    "has_previous_results": true
                                },
                                "results": [
                                    {
                                        "wage_allowance_fixed_id": 0,
                                        "clause_fixed_id": 0,
                                        "clauses": "string",
                                        "parent_allowance": "string",
                                        "allowance": "string",
                                        "is_all_purpose": true,
                                        "rate": 0,
                                        "rate_unit": "string",
                                        "base_pay_rate_id": "string",
                                        "allowance_amount": 0,
                                        "payment_frequency": "string",
                                        "operative_from": "string",
                                        "operative_to": "string",
                                        "version_number": 0,
                                        "last_modified_datetime": "string",
                                        "published_year": 0
                                    }
                                ],
                                "_links": [
                                    {
                                        "href": "string",
                                        "rel": "string",
                                        "method": "string"
                                    }
                                ]
                            },
                            "application/xml": "<GetWageAllowancesByAwardIdResponse>\r\n  <_meta>\r\n    <current_page>0</current_page>\r\n    <page_count>0</page_count>\r\n    <limit>0</limit>\r\n    <result_count>0</result_count>\r\n    <first_row_on_page>0</first_row_on_page>\r\n    <last_row_on_page>0</last_row_on_page>\r\n    <has_more_results>true</has_more_results>\r\n    <has_previous_results>true</has_previous_results>\r\n  </_meta>\r\n  <results>\r\n    <result>\r\n      <wage_allowance_fixed_id>0</wage_allowance_fixed_id>\r\n      <clause_fixed_id>0</clause_fixed_id>\r\n      <clauses>string</clauses>\r\n      <parent_allowance>string</parent_allowance>\r\n      <allowance>string</allowance>\r\n      <is_all_purpose>true</is_all_purpose>\r\n      <rate>0</rate>\r\n      <rate_unit>string</rate_unit>\r\n      <base_pay_rate_id>string</base_pay_rate_id>\r\n      <allowance_amount>0</allowance_amount>\r\n      <payment_frequency>string</payment_frequency>\r\n      <operative_from>string</operative_from>\r\n      <operative_to>string</operative_to>\r\n      <version_number>0</version_number>\r\n      <last_modified_datetime>string</last_modified_datetime>\r\n      <published_year>0</published_year>\r\n    </result>\r\n  </results>\r\n  <_links>\r\n    <_link>\r\n      <href>string</href>\r\n      <rel>string</rel>\r\n      <method>string</method>\r\n    </_link>\r\n  </_links>\r\n</GetWageAllowancesByAwardIdResponse>",
                            "text/xml": "<GetWageAllowancesByAwardIdResponse>\r\n  <_meta>\r\n    <current_page>0</current_page>\r\n    <page_count>0</page_count>\r\n    <limit>0</limit>\r\n    <result_count>0</result_count>\r\n    <first_row_on_page>0</first_row_on_page>\r\n    <last_row_on_page>0</last_row_on_page>\r\n    <has_more_results>true</has_more_results>\r\n    <has_previous_results>true</has_previous_results>\r\n  </_meta>\r\n  <results>\r\n    <result>\r\n      <wage_allowance_fixed_id>0</wage_allowance_fixed_id>\r\n      <clause_fixed_id>0</clause_fixed_id>\r\n      <clauses>string</clauses>\r\n      <parent_allowance>string</parent_allowance>\r\n      <allowance>string</allowance>\r\n      <is_all_purpose>true</is_all_purpose>\r\n      <rate>0</rate>\r\n      <rate_unit>string</rate_unit>\r\n      <base_pay_rate_id>string</base_pay_rate_id>\r\n      <allowance_amount>0</allowance_amount>\r\n      <payment_frequency>string</payment_frequency>\r\n      <operative_from>string</operative_from>\r\n      <operative_to>string</operative_to>\r\n      <version_number>0</version_number>\r\n      <last_modified_datetime>string</last_modified_datetime>\r\n      <published_year>0</published_year>\r\n    </result>\r\n  </results>\r\n  <_links>\r\n    <_link>\r\n      <href>string</href>\r\n      <rel>string</rel>\r\n      <method>string</method>\r\n    </_link>\r\n  </_links>\r\n</GetWageAllowancesByAwardIdResponse>"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "id": "string",
                                        "detail": "string",
                                        "code": "string",
                                        "source": {
                                            "parameter": "string",
                                            "pointer": "string"
                                        }
                                    }
                                ]
                            },
                            "text/json": {
                                "errors": [
                                    {
                                        "id": "string",
                                        "detail": "string",
                                        "code": "string",
                                        "source": {
                                            "parameter": "string",
                                            "pointer": "string"
                                        }
                                    }
                                ]
                            },
                            "application/xml": "<ApiError>\r\n  <errors>\r\n    <error>\r\n      <id>string</id>\r\n      <detail>string</detail>\r\n      <code>string</code>\r\n      <source>\r\n        <parameter>string</parameter>\r\n        <pointer>string</pointer>\r\n      </source>\r\n    </error>\r\n  </errors>\r\n</ApiError>",
                            "text/xml": "<ApiError>\r\n  <errors>\r\n    <error>\r\n      <id>string</id>\r\n      <detail>string</detail>\r\n      <code>string</code>\r\n      <source>\r\n        <parameter>string</parameter>\r\n        <pointer>string</pointer>\r\n      </source>\r\n    </error>\r\n  </errors>\r\n</ApiError>"
                        }
                    }
                }
            }
        },
        "/api/v1/awards/{id_or_code}/wage-allowances/{wage_allowance_fixed_id}": {
            "get": {
                "description": "This API is designed to retrieve a current individual wage-related allowance for a specific award using a fixed identifier.",
                "operationId": "IndividualWageAllowance",
                "summary": "Retrieve a current individual wage-related allowance using a fixed identifier.",
                "tags": [
                    "WageAllowances"
                ],
                "parameters": [
                    {
                        "name": "id_or_code",
                        "in": "path",
                        "description": "Search by \"award_fixed_id\" or \"code\". Example: \"id_or_code=\"12\" OR \"id_or_code\"=\"MA000012\".",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "wage_allowance_fixed_id",
                        "in": "path",
                        "description": "Format - int32. Unique identification number of the wage-related allowance that is fixed over each year.\r\n             Example: \"wage_allowance_fixed_id\"=\"191\"",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Individual Wage Allowance for the given award",
                        "schema": {
                            "$ref": "#/definitions/GetIndividualWageAllowanceByAwardIdResponse"
                        },
                        "examples": {
                            "application/json": {
                                "_meta": {},
                                "result": {
                                    "wage_allowance_fixed_id": 0,
                                    "clause_fixed_id": 0,
                                    "clauses": "string",
                                    "parent_allowance": "string",
                                    "allowance": "string",
                                    "is_all_purpose": true,
                                    "rate": 0,
                                    "rate_unit": "string",
                                    "base_pay_rate_id": "string",
                                    "allowance_amount": 0,
                                    "payment_frequency": "string",
                                    "operative_from": "string",
                                    "operative_to": "string",
                                    "version_number": 0,
                                    "last_modified_datetime": "string",
                                    "published_year": 0
                                },
                                "_links": [
                                    {
                                        "href": "string",
                                        "rel": "string",
                                        "method": "string"
                                    }
                                ]
                            },
                            "text/json": {
                                "_meta": {},
                                "result": {
                                    "wage_allowance_fixed_id": 0,
                                    "clause_fixed_id": 0,
                                    "clauses": "string",
                                    "parent_allowance": "string",
                                    "allowance": "string",
                                    "is_all_purpose": true,
                                    "rate": 0,
                                    "rate_unit": "string",
                                    "base_pay_rate_id": "string",
                                    "allowance_amount": 0,
                                    "payment_frequency": "string",
                                    "operative_from": "string",
                                    "operative_to": "string",
                                    "version_number": 0,
                                    "last_modified_datetime": "string",
                                    "published_year": 0
                                },
                                "_links": [
                                    {
                                        "href": "string",
                                        "rel": "string",
                                        "method": "string"
                                    }
                                ]
                            },
                            "application/xml": "<GetIndividualWageAllowanceByAwardIdResponse>\r\n  <_meta />\r\n  <result>\r\n    <wage_allowance_fixed_id>0</wage_allowance_fixed_id>\r\n    <clause_fixed_id>0</clause_fixed_id>\r\n    <clauses>string</clauses>\r\n    <parent_allowance>string</parent_allowance>\r\n    <allowance>string</allowance>\r\n    <is_all_purpose>true</is_all_purpose>\r\n    <rate>0</rate>\r\n    <rate_unit>string</rate_unit>\r\n    <base_pay_rate_id>string</base_pay_rate_id>\r\n    <allowance_amount>0</allowance_amount>\r\n    <payment_frequency>string</payment_frequency>\r\n    <operative_from>string</operative_from>\r\n    <operative_to>string</operative_to>\r\n    <version_number>0</version_number>\r\n    <last_modified_datetime>string</last_modified_datetime>\r\n    <published_year>0</published_year>\r\n  </result>\r\n  <_links>\r\n    <_link>\r\n      <href>string</href>\r\n      <rel>string</rel>\r\n      <method>string</method>\r\n    </_link>\r\n  </_links>\r\n</GetIndividualWageAllowanceByAwardIdResponse>",
                            "text/xml": "<GetIndividualWageAllowanceByAwardIdResponse>\r\n  <_meta />\r\n  <result>\r\n    <wage_allowance_fixed_id>0</wage_allowance_fixed_id>\r\n    <clause_fixed_id>0</clause_fixed_id>\r\n    <clauses>string</clauses>\r\n    <parent_allowance>string</parent_allowance>\r\n    <allowance>string</allowance>\r\n    <is_all_purpose>true</is_all_purpose>\r\n    <rate>0</rate>\r\n    <rate_unit>string</rate_unit>\r\n    <base_pay_rate_id>string</base_pay_rate_id>\r\n    <allowance_amount>0</allowance_amount>\r\n    <payment_frequency>string</payment_frequency>\r\n    <operative_from>string</operative_from>\r\n    <operative_to>string</operative_to>\r\n    <version_number>0</version_number>\r\n    <last_modified_datetime>string</last_modified_datetime>\r\n    <published_year>0</published_year>\r\n  </result>\r\n  <_links>\r\n    <_link>\r\n      <href>string</href>\r\n      <rel>string</rel>\r\n      <method>string</method>\r\n    </_link>\r\n  </_links>\r\n</GetIndividualWageAllowanceByAwardIdResponse>"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "id": "string",
                                        "detail": "string",
                                        "code": "string",
                                        "source": {
                                            "parameter": "string",
                                            "pointer": "string"
                                        }
                                    }
                                ]
                            },
                            "text/json": {
                                "errors": [
                                    {
                                        "id": "string",
                                        "detail": "string",
                                        "code": "string",
                                        "source": {
                                            "parameter": "string",
                                            "pointer": "string"
                                        }
                                    }
                                ]
                            },
                            "application/xml": "<ApiError>\r\n  <errors>\r\n    <error>\r\n      <id>string</id>\r\n      <detail>string</detail>\r\n      <code>string</code>\r\n      <source>\r\n        <parameter>string</parameter>\r\n        <pointer>string</pointer>\r\n      </source>\r\n    </error>\r\n  </errors>\r\n</ApiError>",
                            "text/xml": "<ApiError>\r\n  <errors>\r\n    <error>\r\n      <id>string</id>\r\n      <detail>string</detail>\r\n      <code>string</code>\r\n      <source>\r\n        <parameter>string</parameter>\r\n        <pointer>string</pointer>\r\n      </source>\r\n    </error>\r\n  </errors>\r\n</ApiError>"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "id": "string",
                                        "detail": "string",
                                        "code": "string",
                                        "source": {
                                            "parameter": "string",
                                            "pointer": "string"
                                        }
                                    }
                                ]
                            },
                            "text/json": {
                                "errors": [
                                    {
                                        "id": "string",
                                        "detail": "string",
                                        "code": "string",
                                        "source": {
                                            "parameter": "string",
                                            "pointer": "string"
                                        }
                                    }
                                ]
                            },
                            "application/xml": "<ApiError>\r\n  <errors>\r\n    <error>\r\n      <id>string</id>\r\n      <detail>string</detail>\r\n      <code>string</code>\r\n      <source>\r\n        <parameter>string</parameter>\r\n        <pointer>string</pointer>\r\n      </source>\r\n    </error>\r\n  </errors>\r\n</ApiError>",
                            "text/xml": "<ApiError>\r\n  <errors>\r\n    <error>\r\n      <id>string</id>\r\n      <detail>string</detail>\r\n      <code>string</code>\r\n      <source>\r\n        <parameter>string</parameter>\r\n        <pointer>string</pointer>\r\n      </source>\r\n    </error>\r\n  </errors>\r\n</ApiError>"
                        }
                    }
                }
            }
        },
        "/api/v1/subscriptions": {
            "post": {
                "description": "This API is designed to subscribe to updates in the Award, Classification, Wage allowance, Expense allowance and Penalty tables.\r\nUsers can subscribe to changes in a particular record or table, or to all tables under a particular award.\r\nUsers will receive a notification when there are changes to existing records or when new records are added against their webhook subscription.\r\n            \r\n            \r\nWe currently support 17 different \"triggers\" (`hook_on`) for data in our database. Those are as follows.\r\n1. `AllAwards` - All awards.\r\n2. `SingleAward` - Single award specified by `award_fixed_id`.\r\n3. `AllClassifications` - All classifications.\r\n4. `ClassificationsForAward` - Classification related to an award specified by `award_fixed_id`.\r\n5. `SpecificClassification` - Classification identified by `classification_fixed_id` (passed as `entity_fixed_id`).\r\n6. `AllExpenseAllowances` - All expense allowances.\r\n7. `ExpenseAllowancesForAward` - Expense allowance related to an award specified by `award_fixed_id`.\r\n8. `SpecificExpenseAllowance` - Expense allowance identified by `expense_allowance_fixed_id` (passed as `entity_fixed_id`).\r\n9. `AllPenalties` - All penalties.\r\n10. `PenaltiesForAward` - Penalty related to an award specified by `award_fixed_id`.\r\n11. `SpecificPenalty` - Penalty identified by `penalty_fixed_id` (passed as `entity_fixed_id`).\r\n12. `AllWageAllowances` - All wage allowances.\r\n13. `WageAllowancesForAward` - Wage allowances related to an award specified by `award_fixed_id`.\r\n14. `SpecificWageAllowance` - Wage allowances identified by `wage_allowance_fixed_id` (passed as `entity_fixed_id`).\r\n15. `AllPayRates` - All pay rates.\r\n16. `PayRatesForAward` - Pay rates related to an award specified by `award_fixed_id`.\r\n17. `PayRateForSpecificClassification` - Pay rates identified by `classification_fixed_id` (passed as `entity_fixed_id`).\r\n            \r\nThese webhook triggers allow you to subscribe to an entire table or to a particular set of rows depending on what type of trigger you subscribe to and the values passed for `award_fixed_id` or `entity_fixed_id`. See the list above for what triggers require `award_fixed_id`/`entity_fixed_id` to be specified.\r\n            \r\nSample request:\r\n            \r\n    POST /\r\n    {\r\n        \"http_verb\": \"POST\",\r\n        \"callback_url\": \"https://www.example.com\",\r\n        \"hook_on\": \"AllAwards\",\r\n        \"entity_fixed_id\": null, (optional)\r\n        \"award_fixed_id\": null, (optional)\r\n        \"webhook_headers\":[\r\n            {\r\n                \"name\": \"string\",\r\n                \"value\": \"string\"\r\n            }\r\n        ]\r\n    }\r\n            \r\nWhen you send a create request the system will try to verify your given `callback_url` to see if it can accept the payloads. It does so by making a `POST` request to the `callback_url` using the following payload.\r\n            \r\n     {\r\n         \"correlation_id\": \"0ca96cd3-cef7-4746-8cb9-a1a70d5ef5c1\", // unique identifier for this handshake\r\n         \"webhook_fixed_id\": \"480a070d-e3df-4a88-9aec-8389de3e7955\", // this will be the fixed_id for your webhook\r\n         \"message_type\": \"HANDSHAKE\",\r\n         \"payload\": null\r\n     }\r\n            \r\nThe system expects your application to read this payload, inspect the `message_type` as `HANDSHAKE` and then return a json response as follows.\r\n            \r\n     {\r\n         \"webhook_fixed_id\": \"480a070d-e3df-4a88-9aec-8389de3e7955\" // the fixed id passed in the above handshake request\r\n     }\r\n            \r\nThis process allows our system to verify that your endpoint is capable and ready to receive webhook notifications.\r\nIf the handshake process is unsuccessful it will indicate so by returning a 400 status code response to your original request.\r\n            \r\nTriggers and Callback:\r\nWhen there is a change in our database and there is a matching webhook, we will use the `callback_url` specified in that webhook to notify of the change.\r\nThe webhook will have one or more `items` that resulted in the trigger and links to get more detailed information about the updated record. We will not pass the changes as a part of this trigger payload.\r\n            \r\nSample Trigger Call-back Model\r\n            \r\n     {\r\n         \"correlation_id\": \"00000000-0000-0000-0000-000000000000\", // an unique id for this callback\r\n         \"webhook_fixed_id\": \"480a070d-e3df-4a88-9aec-8389de3e7955\",\r\n         \"message_type\": \"TRIGGER\",\r\n         \"payload\": {\r\n             \"hook_on\": \"AllAwards\",\r\n             \"items\": [\r\n             {\r\n                 \"change_reference_id\": 123,\r\n                 \"link\": \"https://baseurl/api/v1/awards/5\",\r\n                 \"details\": \"string\"\r\n             },\r\n             {\r\n                 \"change_reference_id\": 456,\r\n                 \"link\": \"https://baseurl/api/v1/awards/6\",\r\n                 \"details\": \"string\"\r\n             }\r\n             ]\r\n         }\r\n     }\r\n            \r\nNote:We only allow `https://` URLS and TLS 1.2+ connections. Make sure your server supports that.\r\n            \r\nAlong with the above payload, we will also pass the `webhook_headers` you specified for the webhook.\r\nAdditionally we pass the `webhook_secret` in a special header with the name `WEBHOOK-SECRET`.\r\nWe strongly advise you to compare the value of this header to the `webhook_secret` you received during the creation process of the webhook to validate the authenticity of the request.\r\n            \r\nIf we do not receive a status code 200 response from your call-back endpoint, we will retry the request and failing that, mark the webhook as inactive.\r\nThe system will not trigger this webhook until you mark it as active again.",
                "operationId": "CreateWebhookSubscription",
                "summary": "Subscribe to a MAPD webhook",
                "tags": [
                    "WebhookSubscription"
                ],
                "parameters": [
                    {
                        "name": "createSubscriptionRequestModel",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/CreateSubscriptionRequestModel"
                        }
                    }
                ],
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/CreateWebhookSubscriptionResponse"
                        },
                        "examples": {
                            "application/json": {
                                "_meta": {},
                                "result": {
                                    "callback_secret": "string",
                                    "webhook_fixed_id": "string"
                                },
                                "_links": [
                                    {
                                        "href": "string",
                                        "rel": "string",
                                        "method": "string"
                                    }
                                ]
                            },
                            "text/json": {
                                "_meta": {},
                                "result": {
                                    "callback_secret": "string",
                                    "webhook_fixed_id": "string"
                                },
                                "_links": [
                                    {
                                        "href": "string",
                                        "rel": "string",
                                        "method": "string"
                                    }
                                ]
                            },
                            "application/xml": "<CreateWebhookSubscriptionResponse>\r\n  <_meta />\r\n  <result>\r\n    <callback_secret>string</callback_secret>\r\n    <webhook_fixed_id>string</webhook_fixed_id>\r\n  </result>\r\n  <_links>\r\n    <_link>\r\n      <href>string</href>\r\n      <rel>string</rel>\r\n      <method>string</method>\r\n    </_link>\r\n  </_links>\r\n</CreateWebhookSubscriptionResponse>",
                            "text/xml": "<CreateWebhookSubscriptionResponse>\r\n  <_meta />\r\n  <result>\r\n    <callback_secret>string</callback_secret>\r\n    <webhook_fixed_id>string</webhook_fixed_id>\r\n  </result>\r\n  <_links>\r\n    <_link>\r\n      <href>string</href>\r\n      <rel>string</rel>\r\n      <method>string</method>\r\n    </_link>\r\n  </_links>\r\n</CreateWebhookSubscriptionResponse>"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "id": "string",
                                        "detail": "string",
                                        "code": "string",
                                        "source": {
                                            "parameter": "string",
                                            "pointer": "string"
                                        }
                                    }
                                ]
                            },
                            "text/json": {
                                "errors": [
                                    {
                                        "id": "string",
                                        "detail": "string",
                                        "code": "string",
                                        "source": {
                                            "parameter": "string",
                                            "pointer": "string"
                                        }
                                    }
                                ]
                            },
                            "application/xml": "<ApiError>\r\n  <errors>\r\n    <error>\r\n      <id>string</id>\r\n      <detail>string</detail>\r\n      <code>string</code>\r\n      <source>\r\n        <parameter>string</parameter>\r\n        <pointer>string</pointer>\r\n      </source>\r\n    </error>\r\n  </errors>\r\n</ApiError>",
                            "text/xml": "<ApiError>\r\n  <errors>\r\n    <error>\r\n      <id>string</id>\r\n      <detail>string</detail>\r\n      <code>string</code>\r\n      <source>\r\n        <parameter>string</parameter>\r\n        <pointer>string</pointer>\r\n      </source>\r\n    </error>\r\n  </errors>\r\n</ApiError>"
                        }
                    }
                }
            },
            "get": {
                "description": "This API is designed to retrieve a list of all user webhook subscriptions to support payroll business processes.",
                "operationId": "GetAllWebhookSubscriptions",
                "summary": "Retrieve all webhook subscriptions",
                "tags": [
                    "WebhookSubscription"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Format - int32. The page requested for the Awards. Default: 1",
                        "type": "integer",
                        "default": 1,
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Format - int32. The limit for the results per page. Default: 10 and Maximum acceptable: 100",
                        "type": "integer",
                        "default": 10,
                        "format": "int32"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Can be sorted using \"id, webhook_fixed_id, created_on, updated_on, is_active, hook_on, callback_url, entity_fixed_id, award_fixed_id\" (optional). Example \"id asc, hook_on desc\"",
                        "type": "string"
                    }
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "List of Awards",
                        "schema": {
                            "$ref": "#/definitions/GetAllWebhookSubscriptionsResponse"
                        },
                        "examples": {
                            "application/json": {
                                "_meta": {
                                    "current_page": 0,
                                    "page_count": 0,
                                    "limit": 0,
                                    "result_count": 0,
                                    "first_row_on_page": 0,
                                    "last_row_on_page": 0,
                                    "has_more_results": true,
                                    "has_previous_results": true
                                },
                                "results": [
                                    {
                                        "http_verb": "string",
                                        "callback_url": "string",
                                        "hook_on": "string",
                                        "entity_fixed_id": 0,
                                        "award_fixed_id": 0,
                                        "webhook_headers": [
                                            {
                                                "name": "string",
                                                "value": "string"
                                            }
                                        ],
                                        "webhook_fixed_id": "string",
                                        "is_active": true,
                                        "created_on": "string",
                                        "updated_on": "string"
                                    }
                                ],
                                "_links": [
                                    {
                                        "href": "string",
                                        "rel": "string",
                                        "method": "string"
                                    }
                                ]
                            },
                            "text/json": {
                                "_meta": {
                                    "current_page": 0,
                                    "page_count": 0,
                                    "limit": 0,
                                    "result_count": 0,
                                    "first_row_on_page": 0,
                                    "last_row_on_page": 0,
                                    "has_more_results": true,
                                    "has_previous_results": true
                                },
                                "results": [
                                    {
                                        "http_verb": "string",
                                        "callback_url": "string",
                                        "hook_on": "string",
                                        "entity_fixed_id": 0,
                                        "award_fixed_id": 0,
                                        "webhook_headers": [
                                            {
                                                "name": "string",
                                                "value": "string"
                                            }
                                        ],
                                        "webhook_fixed_id": "string",
                                        "is_active": true,
                                        "created_on": "string",
                                        "updated_on": "string"
                                    }
                                ],
                                "_links": [
                                    {
                                        "href": "string",
                                        "rel": "string",
                                        "method": "string"
                                    }
                                ]
                            },
                            "application/xml": "<GetAllWebhookSubscriptionsResponse>\r\n  <_meta>\r\n    <current_page>0</current_page>\r\n    <page_count>0</page_count>\r\n    <limit>0</limit>\r\n    <result_count>0</result_count>\r\n    <first_row_on_page>0</first_row_on_page>\r\n    <last_row_on_page>0</last_row_on_page>\r\n    <has_more_results>true</has_more_results>\r\n    <has_previous_results>true</has_previous_results>\r\n  </_meta>\r\n  <results>\r\n    <result>\r\n      <http_verb>string</http_verb>\r\n      <callback_url>string</callback_url>\r\n      <hook_on>string</hook_on>\r\n      <entity_fixed_id>0</entity_fixed_id>\r\n      <award_fixed_id>0</award_fixed_id>\r\n      <webhook_headers>\r\n        <webhook_header>\r\n          <name>string</name>\r\n          <value>string</value>\r\n        </webhook_header>\r\n      </webhook_headers>\r\n      <webhook_fixed_id>string</webhook_fixed_id>\r\n      <is_active>true</is_active>\r\n      <created_on>string</created_on>\r\n      <updated_on>string</updated_on>\r\n    </result>\r\n  </results>\r\n  <_links>\r\n    <_link>\r\n      <href>string</href>\r\n      <rel>string</rel>\r\n      <method>string</method>\r\n    </_link>\r\n  </_links>\r\n</GetAllWebhookSubscriptionsResponse>",
                            "text/xml": "<GetAllWebhookSubscriptionsResponse>\r\n  <_meta>\r\n    <current_page>0</current_page>\r\n    <page_count>0</page_count>\r\n    <limit>0</limit>\r\n    <result_count>0</result_count>\r\n    <first_row_on_page>0</first_row_on_page>\r\n    <last_row_on_page>0</last_row_on_page>\r\n    <has_more_results>true</has_more_results>\r\n    <has_previous_results>true</has_previous_results>\r\n  </_meta>\r\n  <results>\r\n    <result>\r\n      <http_verb>string</http_verb>\r\n      <callback_url>string</callback_url>\r\n      <hook_on>string</hook_on>\r\n      <entity_fixed_id>0</entity_fixed_id>\r\n      <award_fixed_id>0</award_fixed_id>\r\n      <webhook_headers>\r\n        <webhook_header>\r\n          <name>string</name>\r\n          <value>string</value>\r\n        </webhook_header>\r\n      </webhook_headers>\r\n      <webhook_fixed_id>string</webhook_fixed_id>\r\n      <is_active>true</is_active>\r\n      <created_on>string</created_on>\r\n      <updated_on>string</updated_on>\r\n    </result>\r\n  </results>\r\n  <_links>\r\n    <_link>\r\n      <href>string</href>\r\n      <rel>string</rel>\r\n      <method>string</method>\r\n    </_link>\r\n  </_links>\r\n</GetAllWebhookSubscriptionsResponse>"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "id": "string",
                                        "detail": "string",
                                        "code": "string",
                                        "source": {
                                            "parameter": "string",
                                            "pointer": "string"
                                        }
                                    }
                                ]
                            },
                            "text/json": {
                                "errors": [
                                    {
                                        "id": "string",
                                        "detail": "string",
                                        "code": "string",
                                        "source": {
                                            "parameter": "string",
                                            "pointer": "string"
                                        }
                                    }
                                ]
                            },
                            "application/xml": "<ApiError>\r\n  <errors>\r\n    <error>\r\n      <id>string</id>\r\n      <detail>string</detail>\r\n      <code>string</code>\r\n      <source>\r\n        <parameter>string</parameter>\r\n        <pointer>string</pointer>\r\n      </source>\r\n    </error>\r\n  </errors>\r\n</ApiError>",
                            "text/xml": "<ApiError>\r\n  <errors>\r\n    <error>\r\n      <id>string</id>\r\n      <detail>string</detail>\r\n      <code>string</code>\r\n      <source>\r\n        <parameter>string</parameter>\r\n        <pointer>string</pointer>\r\n      </source>\r\n    </error>\r\n  </errors>\r\n</ApiError>"
                        }
                    }
                }
            }
        },
        "/api/v1/subscriptions/{webhook_fixed_id}": {
            "patch": {
                "description": "This API is designed to update the user’s existing webhook subscriptions or to mark a subscription as inactive.\r\n            \r\nSample request:\r\n            \r\n    PATCH /\"webhook_fixed_id\": 6B29FC40-CA47-1067-B31D-00DD010662DA\r\n    {\r\n        \"callback_url\": \"https://www.example.com\", [optional]\r\n        \"webhook_headers\":[                        [optional]\r\n            {\r\n                \"name\": \"string\",\r\n                \"value\": \"string\"\r\n            }\r\n        ],\r\n        \"is_active\": true                          [optional]\r\n    }\r\n            \r\nFor any web hook that is in the active state te system will follow the same handshake process described in the create webhook endpoint.\r\nWe overwrite the existing webhook with only the information passed in this model and consider any null fields as an instruction not to update that field.",
                "operationId": "UpdateWebhookSubscription",
                "summary": "Update a user webhook subscription",
                "tags": [
                    "WebhookSubscription"
                ],
                "parameters": [
                    {
                        "name": "webhook_fixed_id",
                        "in": "path",
                        "description": "Format - uuid.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sparseUpdateSubscriptionRequestModel",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/SparseUpdateSubscriptionRequestModel"
                        }
                    }
                ],
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/*+json",
                    "application/xml",
                    "text/xml",
                    "application/*+xml"
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/GetWebhookSubscriptionByIdResponse"
                        },
                        "examples": {
                            "application/json": {
                                "_meta": {},
                                "result": {
                                    "http_verb": "string",
                                    "callback_url": "string",
                                    "hook_on": "string",
                                    "entity_fixed_id": 0,
                                    "award_fixed_id": 0,
                                    "webhook_headers": [
                                        {
                                            "name": "string",
                                            "value": "string"
                                        }
                                    ],
                                    "webhook_fixed_id": "string",
                                    "is_active": true,
                                    "created_on": "string",
                                    "updated_on": "string"
                                },
                                "_links": [
                                    {
                                        "href": "string",
                                        "rel": "string",
                                        "method": "string"
                                    }
                                ]
                            },
                            "text/json": {
                                "_meta": {},
                                "result": {
                                    "http_verb": "string",
                                    "callback_url": "string",
                                    "hook_on": "string",
                                    "entity_fixed_id": 0,
                                    "award_fixed_id": 0,
                                    "webhook_headers": [
                                        {
                                            "name": "string",
                                            "value": "string"
                                        }
                                    ],
                                    "webhook_fixed_id": "string",
                                    "is_active": true,
                                    "created_on": "string",
                                    "updated_on": "string"
                                },
                                "_links": [
                                    {
                                        "href": "string",
                                        "rel": "string",
                                        "method": "string"
                                    }
                                ]
                            },
                            "application/xml": "<GetWebhookSubscriptionByIdResponse>\r\n  <_meta />\r\n  <result>\r\n    <http_verb>string</http_verb>\r\n    <callback_url>string</callback_url>\r\n    <hook_on>string</hook_on>\r\n    <entity_fixed_id>0</entity_fixed_id>\r\n    <award_fixed_id>0</award_fixed_id>\r\n    <webhook_headers>\r\n      <webhook_header>\r\n        <name>string</name>\r\n        <value>string</value>\r\n      </webhook_header>\r\n    </webhook_headers>\r\n    <webhook_fixed_id>string</webhook_fixed_id>\r\n    <is_active>true</is_active>\r\n    <created_on>string</created_on>\r\n    <updated_on>string</updated_on>\r\n  </result>\r\n  <_links>\r\n    <_link>\r\n      <href>string</href>\r\n      <rel>string</rel>\r\n      <method>string</method>\r\n    </_link>\r\n  </_links>\r\n</GetWebhookSubscriptionByIdResponse>",
                            "text/xml": "<GetWebhookSubscriptionByIdResponse>\r\n  <_meta />\r\n  <result>\r\n    <http_verb>string</http_verb>\r\n    <callback_url>string</callback_url>\r\n    <hook_on>string</hook_on>\r\n    <entity_fixed_id>0</entity_fixed_id>\r\n    <award_fixed_id>0</award_fixed_id>\r\n    <webhook_headers>\r\n      <webhook_header>\r\n        <name>string</name>\r\n        <value>string</value>\r\n      </webhook_header>\r\n    </webhook_headers>\r\n    <webhook_fixed_id>string</webhook_fixed_id>\r\n    <is_active>true</is_active>\r\n    <created_on>string</created_on>\r\n    <updated_on>string</updated_on>\r\n  </result>\r\n  <_links>\r\n    <_link>\r\n      <href>string</href>\r\n      <rel>string</rel>\r\n      <method>string</method>\r\n    </_link>\r\n  </_links>\r\n</GetWebhookSubscriptionByIdResponse>"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "id": "string",
                                        "detail": "string",
                                        "code": "string",
                                        "source": {
                                            "parameter": "string",
                                            "pointer": "string"
                                        }
                                    }
                                ]
                            },
                            "text/json": {
                                "errors": [
                                    {
                                        "id": "string",
                                        "detail": "string",
                                        "code": "string",
                                        "source": {
                                            "parameter": "string",
                                            "pointer": "string"
                                        }
                                    }
                                ]
                            },
                            "application/xml": "<ApiError>\r\n  <errors>\r\n    <error>\r\n      <id>string</id>\r\n      <detail>string</detail>\r\n      <code>string</code>\r\n      <source>\r\n        <parameter>string</parameter>\r\n        <pointer>string</pointer>\r\n      </source>\r\n    </error>\r\n  </errors>\r\n</ApiError>",
                            "text/xml": "<ApiError>\r\n  <errors>\r\n    <error>\r\n      <id>string</id>\r\n      <detail>string</detail>\r\n      <code>string</code>\r\n      <source>\r\n        <parameter>string</parameter>\r\n        <pointer>string</pointer>\r\n      </source>\r\n    </error>\r\n  </errors>\r\n</ApiError>"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "id": "string",
                                        "detail": "string",
                                        "code": "string",
                                        "source": {
                                            "parameter": "string",
                                            "pointer": "string"
                                        }
                                    }
                                ]
                            },
                            "text/json": {
                                "errors": [
                                    {
                                        "id": "string",
                                        "detail": "string",
                                        "code": "string",
                                        "source": {
                                            "parameter": "string",
                                            "pointer": "string"
                                        }
                                    }
                                ]
                            },
                            "application/xml": "<ApiError>\r\n  <errors>\r\n    <error>\r\n      <id>string</id>\r\n      <detail>string</detail>\r\n      <code>string</code>\r\n      <source>\r\n        <parameter>string</parameter>\r\n        <pointer>string</pointer>\r\n      </source>\r\n    </error>\r\n  </errors>\r\n</ApiError>",
                            "text/xml": "<ApiError>\r\n  <errors>\r\n    <error>\r\n      <id>string</id>\r\n      <detail>string</detail>\r\n      <code>string</code>\r\n      <source>\r\n        <parameter>string</parameter>\r\n        <pointer>string</pointer>\r\n      </source>\r\n    </error>\r\n  </errors>\r\n</ApiError>"
                        }
                    }
                }
            },
            "get": {
                "description": "This API is designed to retrieve a webhook subscription by id.\r\n            \r\nSample request:\r\n            \r\n    GET /\"webhook_fixed_id\": 6B29FC40-CA47-1067-B31D-00DD010662DA",
                "operationId": "GetWebhookSubscriptionById",
                "summary": "Retrieve a webhook subscription",
                "tags": [
                    "WebhookSubscription"
                ],
                "parameters": [
                    {
                        "name": "webhook_fixed_id",
                        "in": "path",
                        "description": "Format - uuid.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/GetWebhookSubscriptionByIdResponse"
                        },
                        "examples": {
                            "application/json": {
                                "_meta": {},
                                "result": {
                                    "http_verb": "string",
                                    "callback_url": "string",
                                    "hook_on": "string",
                                    "entity_fixed_id": 0,
                                    "award_fixed_id": 0,
                                    "webhook_headers": [
                                        {
                                            "name": "string",
                                            "value": "string"
                                        }
                                    ],
                                    "webhook_fixed_id": "string",
                                    "is_active": true,
                                    "created_on": "string",
                                    "updated_on": "string"
                                },
                                "_links": [
                                    {
                                        "href": "string",
                                        "rel": "string",
                                        "method": "string"
                                    }
                                ]
                            },
                            "text/json": {
                                "_meta": {},
                                "result": {
                                    "http_verb": "string",
                                    "callback_url": "string",
                                    "hook_on": "string",
                                    "entity_fixed_id": 0,
                                    "award_fixed_id": 0,
                                    "webhook_headers": [
                                        {
                                            "name": "string",
                                            "value": "string"
                                        }
                                    ],
                                    "webhook_fixed_id": "string",
                                    "is_active": true,
                                    "created_on": "string",
                                    "updated_on": "string"
                                },
                                "_links": [
                                    {
                                        "href": "string",
                                        "rel": "string",
                                        "method": "string"
                                    }
                                ]
                            },
                            "application/xml": "<GetWebhookSubscriptionByIdResponse>\r\n  <_meta />\r\n  <result>\r\n    <http_verb>string</http_verb>\r\n    <callback_url>string</callback_url>\r\n    <hook_on>string</hook_on>\r\n    <entity_fixed_id>0</entity_fixed_id>\r\n    <award_fixed_id>0</award_fixed_id>\r\n    <webhook_headers>\r\n      <webhook_header>\r\n        <name>string</name>\r\n        <value>string</value>\r\n      </webhook_header>\r\n    </webhook_headers>\r\n    <webhook_fixed_id>string</webhook_fixed_id>\r\n    <is_active>true</is_active>\r\n    <created_on>string</created_on>\r\n    <updated_on>string</updated_on>\r\n  </result>\r\n  <_links>\r\n    <_link>\r\n      <href>string</href>\r\n      <rel>string</rel>\r\n      <method>string</method>\r\n    </_link>\r\n  </_links>\r\n</GetWebhookSubscriptionByIdResponse>",
                            "text/xml": "<GetWebhookSubscriptionByIdResponse>\r\n  <_meta />\r\n  <result>\r\n    <http_verb>string</http_verb>\r\n    <callback_url>string</callback_url>\r\n    <hook_on>string</hook_on>\r\n    <entity_fixed_id>0</entity_fixed_id>\r\n    <award_fixed_id>0</award_fixed_id>\r\n    <webhook_headers>\r\n      <webhook_header>\r\n        <name>string</name>\r\n        <value>string</value>\r\n      </webhook_header>\r\n    </webhook_headers>\r\n    <webhook_fixed_id>string</webhook_fixed_id>\r\n    <is_active>true</is_active>\r\n    <created_on>string</created_on>\r\n    <updated_on>string</updated_on>\r\n  </result>\r\n  <_links>\r\n    <_link>\r\n      <href>string</href>\r\n      <rel>string</rel>\r\n      <method>string</method>\r\n    </_link>\r\n  </_links>\r\n</GetWebhookSubscriptionByIdResponse>"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "id": "string",
                                        "detail": "string",
                                        "code": "string",
                                        "source": {
                                            "parameter": "string",
                                            "pointer": "string"
                                        }
                                    }
                                ]
                            },
                            "text/json": {
                                "errors": [
                                    {
                                        "id": "string",
                                        "detail": "string",
                                        "code": "string",
                                        "source": {
                                            "parameter": "string",
                                            "pointer": "string"
                                        }
                                    }
                                ]
                            },
                            "application/xml": "<ApiError>\r\n  <errors>\r\n    <error>\r\n      <id>string</id>\r\n      <detail>string</detail>\r\n      <code>string</code>\r\n      <source>\r\n        <parameter>string</parameter>\r\n        <pointer>string</pointer>\r\n      </source>\r\n    </error>\r\n  </errors>\r\n</ApiError>",
                            "text/xml": "<ApiError>\r\n  <errors>\r\n    <error>\r\n      <id>string</id>\r\n      <detail>string</detail>\r\n      <code>string</code>\r\n      <source>\r\n        <parameter>string</parameter>\r\n        <pointer>string</pointer>\r\n      </source>\r\n    </error>\r\n  </errors>\r\n</ApiError>"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "id": "string",
                                        "detail": "string",
                                        "code": "string",
                                        "source": {
                                            "parameter": "string",
                                            "pointer": "string"
                                        }
                                    }
                                ]
                            },
                            "text/json": {
                                "errors": [
                                    {
                                        "id": "string",
                                        "detail": "string",
                                        "code": "string",
                                        "source": {
                                            "parameter": "string",
                                            "pointer": "string"
                                        }
                                    }
                                ]
                            },
                            "application/xml": "<ApiError>\r\n  <errors>\r\n    <error>\r\n      <id>string</id>\r\n      <detail>string</detail>\r\n      <code>string</code>\r\n      <source>\r\n        <parameter>string</parameter>\r\n        <pointer>string</pointer>\r\n      </source>\r\n    </error>\r\n  </errors>\r\n</ApiError>",
                            "text/xml": "<ApiError>\r\n  <errors>\r\n    <error>\r\n      <id>string</id>\r\n      <detail>string</detail>\r\n      <code>string</code>\r\n      <source>\r\n        <parameter>string</parameter>\r\n        <pointer>string</pointer>\r\n      </source>\r\n    </error>\r\n  </errors>\r\n</ApiError>"
                        }
                    }
                }
            },
            "delete": {
                "description": "The API is designed to delete a webhook subscription by id.\r\n            \r\nSample request:\r\n            \r\n    DELETE /\"webhook_fixed_id\": 6B29FC40-CA47-1067-B31D-00DD010662DA",
                "operationId": "DeleteWebhookSubscriptionById",
                "summary": "Delete a webhook subscription",
                "tags": [
                    "WebhookSubscription"
                ],
                "parameters": [
                    {
                        "name": "webhook_fixed_id",
                        "in": "path",
                        "description": "Format - uuid.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "produces": [
                    "text/plain",
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "id": "string",
                                        "detail": "string",
                                        "code": "string",
                                        "source": {
                                            "parameter": "string",
                                            "pointer": "string"
                                        }
                                    }
                                ]
                            },
                            "text/json": {
                                "errors": [
                                    {
                                        "id": "string",
                                        "detail": "string",
                                        "code": "string",
                                        "source": {
                                            "parameter": "string",
                                            "pointer": "string"
                                        }
                                    }
                                ]
                            },
                            "application/xml": "<ApiError>\r\n  <errors>\r\n    <error>\r\n      <id>string</id>\r\n      <detail>string</detail>\r\n      <code>string</code>\r\n      <source>\r\n        <parameter>string</parameter>\r\n        <pointer>string</pointer>\r\n      </source>\r\n    </error>\r\n  </errors>\r\n</ApiError>",
                            "text/xml": "<ApiError>\r\n  <errors>\r\n    <error>\r\n      <id>string</id>\r\n      <detail>string</detail>\r\n      <code>string</code>\r\n      <source>\r\n        <parameter>string</parameter>\r\n        <pointer>string</pointer>\r\n      </source>\r\n    </error>\r\n  </errors>\r\n</ApiError>"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        },
                        "examples": {
                            "application/json": {
                                "errors": [
                                    {
                                        "id": "string",
                                        "detail": "string",
                                        "code": "string",
                                        "source": {
                                            "parameter": "string",
                                            "pointer": "string"
                                        }
                                    }
                                ]
                            },
                            "text/json": {
                                "errors": [
                                    {
                                        "id": "string",
                                        "detail": "string",
                                        "code": "string",
                                        "source": {
                                            "parameter": "string",
                                            "pointer": "string"
                                        }
                                    }
                                ]
                            },
                            "application/xml": "<ApiError>\r\n  <errors>\r\n    <error>\r\n      <id>string</id>\r\n      <detail>string</detail>\r\n      <code>string</code>\r\n      <source>\r\n        <parameter>string</parameter>\r\n        <pointer>string</pointer>\r\n      </source>\r\n    </error>\r\n  </errors>\r\n</ApiError>",
                            "text/xml": "<ApiError>\r\n  <errors>\r\n    <error>\r\n      <id>string</id>\r\n      <detail>string</detail>\r\n      <code>string</code>\r\n      <source>\r\n        <parameter>string</parameter>\r\n        <pointer>string</pointer>\r\n      </source>\r\n    </error>\r\n  </errors>\r\n</ApiError>"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ApiError": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/definitions/ApiErrorItem"
                            }
                        ],
                        "xml": {
                            "name": "error"
                        }
                    },
                    "xml": {
                        "name": "errors",
                        "wrapped": true
                    }
                }
            },
            "additionalProperties": false
        },
        "ApiErrorItem": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "detail": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "source": {
                    "$ref": "#/definitions/ErrorSource"
                }
            },
            "additionalProperties": false
        },
        "AwardClassificationModel": {
            "type": "object",
            "properties": {
                "classification_fixed_id": {
                    "format": "int32",
                    "type": "integer"
                },
                "clause_fixed_id": {
                    "format": "int32",
                    "type": "integer"
                },
                "clauses": {
                    "type": "string"
                },
                "clause_description": {
                    "type": "string"
                },
                "parent_classification_name": {
                    "type": "string"
                },
                "classification": {
                    "type": "string"
                },
                "classification_level": {
                    "format": "int32",
                    "type": "integer"
                },
                "next_down_classification_fixed_id": {
                    "format": "int32",
                    "type": "integer"
                },
                "next_up_classification_fixed_id": {
                    "format": "int32",
                    "type": "integer"
                },
                "operative_from": {
                    "type": "string"
                },
                "operative_to": {
                    "type": "string"
                },
                "version_number": {
                    "format": "int32",
                    "type": "integer"
                },
                "last_modified_datetime": {
                    "format": "date-time",
                    "type": "string"
                },
                "published_year": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "additionalProperties": false
        },
        "AwardIdentificationModel": {
            "type": "object",
            "properties": {
                "award_id": {
                    "format": "int32",
                    "type": "integer"
                },
                "award_fixed_id": {
                    "format": "int32",
                    "type": "integer"
                },
                "code": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "award_operative_from": {
                    "type": "string"
                },
                "award_operative_to": {
                    "type": "string"
                },
                "version_number": {
                    "format": "int32",
                    "type": "integer"
                },
                "last_modified_datetime": {
                    "format": "date-time",
                    "type": "string"
                },
                "published_year": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "additionalProperties": false
        },
        "AwardModel": {
            "type": "object",
            "properties": {
                "award_id": {
                    "format": "int32",
                    "type": "integer"
                },
                "award_fixed_id": {
                    "format": "int32",
                    "type": "integer"
                },
                "code": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "award_operative_from": {
                    "type": "string"
                },
                "award_operative_to": {
                    "type": "string"
                },
                "version_number": {
                    "format": "int32",
                    "type": "integer"
                },
                "last_modified_datetime": {
                    "format": "date-time",
                    "type": "string"
                },
                "published_year": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "additionalProperties": false
        },
        "CreateSubscriptionRequestModel": {
            "required": [
                "callback_url",
                "hook_on",
                "http_verb"
            ],
            "type": "object",
            "properties": {
                "http_verb": {
                    "minLength": 1,
                    "type": "string"
                },
                "callback_url": {
                    "minLength": 1,
                    "type": "string"
                },
                "hook_on": {
                    "minLength": 1,
                    "type": "string"
                },
                "entity_fixed_id": {
                    "format": "int32",
                    "type": "integer"
                },
                "award_fixed_id": {
                    "format": "int32",
                    "type": "integer"
                },
                "webhook_headers": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/definitions/HeadersModel"
                            }
                        ],
                        "xml": {
                            "name": "webhook_header"
                        }
                    },
                    "xml": {
                        "name": "webhook_headers",
                        "wrapped": true
                    }
                }
            },
            "additionalProperties": false,
            "example": {
                "http_verb": "string",
                "callback_url": "string",
                "hook_on": "string",
                "entity_fixed_id": 0,
                "award_fixed_id": 0,
                "webhook_headers": [
                    {
                        "name": "string",
                        "value": "string"
                    }
                ]
            }
        },
        "CreateWebhookSubscriptionResponse": {
            "type": "object",
            "properties": {
                "_meta": {
                    "$ref": "#/definitions/SingleItemMetaModel"
                },
                "result": {
                    "$ref": "#/definitions/CreateWebhookSubscriptionResponseModel"
                },
                "_links": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/definitions/Link"
                            }
                        ],
                        "xml": {
                            "name": "_link"
                        }
                    },
                    "xml": {
                        "name": "_links",
                        "wrapped": true
                    }
                }
            },
            "additionalProperties": false
        },
        "CreateWebhookSubscriptionResponseModel": {
            "type": "object",
            "properties": {
                "callback_secret": {
                    "format": "uuid",
                    "type": "string"
                },
                "webhook_fixed_id": {
                    "format": "uuid",
                    "type": "string"
                }
            },
            "additionalProperties": false
        },
        "ErrorSource": {
            "type": "object",
            "properties": {
                "parameter": {
                    "type": "string"
                },
                "pointer": {
                    "type": "string"
                }
            },
            "additionalProperties": false
        },
        "ExpenseAllowanceModel": {
            "type": "object",
            "properties": {
                "expense_allowance_fixed_id": {
                    "format": "int32",
                    "type": "integer"
                },
                "clause_fixed_id": {
                    "format": "int32",
                    "type": "integer"
                },
                "clauses": {
                    "type": "string"
                },
                "parent_allowance": {
                    "type": "string"
                },
                "allowance": {
                    "type": "string"
                },
                "is_all_purpose": {
                    "type": "boolean"
                },
                "allowance_amount": {
                    "format": "double",
                    "type": "number"
                },
                "payment_frequency": {
                    "type": "string"
                },
                "last_adjusted_year": {
                    "format": "int32",
                    "type": "integer"
                },
                "cpi_quarter_last_adjusted": {
                    "type": "string"
                },
                "operative_from": {
                    "type": "string"
                },
                "operative_to": {
                    "type": "string"
                },
                "version_number": {
                    "format": "int32",
                    "type": "integer"
                },
                "last_modified_datetime": {
                    "format": "date-time",
                    "type": "string"
                },
                "published_year": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "additionalProperties": false
        },
        "GetAllWebhookSubscriptionsResponse": {
            "type": "object",
            "properties": {
                "_meta": {
                    "$ref": "#/definitions/PagedResultMetaModel"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/definitions/SubscriptionsModel"
                            }
                        ],
                        "xml": {
                            "name": "result"
                        }
                    },
                    "xml": {
                        "name": "results",
                        "wrapped": true
                    }
                },
                "_links": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/definitions/Link"
                            }
                        ],
                        "xml": {
                            "name": "_link"
                        }
                    },
                    "xml": {
                        "name": "_links",
                        "wrapped": true
                    }
                }
            },
            "additionalProperties": false
        },
        "GetAwardsByIdResponse": {
            "type": "object",
            "properties": {
                "_meta": {
                    "$ref": "#/definitions/PagedResultMetaModel"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/definitions/AwardIdentificationModel"
                            }
                        ],
                        "xml": {
                            "name": "result"
                        }
                    },
                    "xml": {
                        "name": "results",
                        "wrapped": true
                    }
                },
                "_links": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/definitions/Link"
                            }
                        ],
                        "xml": {
                            "name": "_link"
                        }
                    },
                    "xml": {
                        "name": "_links",
                        "wrapped": true
                    }
                }
            },
            "additionalProperties": false
        },
        "GetAwardsResponse": {
            "type": "object",
            "properties": {
                "_meta": {
                    "$ref": "#/definitions/PagedResultMetaModel"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/definitions/AwardModel"
                            }
                        ],
                        "xml": {
                            "name": "result"
                        }
                    },
                    "xml": {
                        "name": "results",
                        "wrapped": true
                    }
                },
                "_links": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/definitions/Link"
                            }
                        ],
                        "xml": {
                            "name": "_link"
                        }
                    },
                    "xml": {
                        "name": "_links",
                        "wrapped": true
                    }
                }
            },
            "additionalProperties": false
        },
        "GetClassificationsByAwardIdResponse": {
            "type": "object",
            "properties": {
                "_meta": {
                    "$ref": "#/definitions/PagedResultMetaModel"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/definitions/AwardClassificationModel"
                            }
                        ],
                        "xml": {
                            "name": "result"
                        }
                    },
                    "xml": {
                        "name": "results",
                        "wrapped": true
                    }
                },
                "_links": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/definitions/Link"
                            }
                        ],
                        "xml": {
                            "name": "_link"
                        }
                    },
                    "xml": {
                        "name": "_links",
                        "wrapped": true
                    }
                }
            },
            "additionalProperties": false
        },
        "GetExpenseAllowanceByAwardIdResponse": {
            "type": "object",
            "properties": {
                "_meta": {
                    "$ref": "#/definitions/PagedResultMetaModel"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/definitions/ExpenseAllowanceModel"
                            }
                        ],
                        "xml": {
                            "name": "result"
                        }
                    },
                    "xml": {
                        "name": "results",
                        "wrapped": true
                    }
                },
                "_links": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/definitions/Link"
                            }
                        ],
                        "xml": {
                            "name": "_link"
                        }
                    },
                    "xml": {
                        "name": "_links",
                        "wrapped": true
                    }
                }
            },
            "additionalProperties": false
        },
        "GetIndividualClassificationByIdResponse": {
            "type": "object",
            "properties": {
                "_meta": {
                    "$ref": "#/definitions/SingleItemMetaModel"
                },
                "result": {
                    "$ref": "#/definitions/GetIndividualClassificationByIdResponseModel"
                },
                "_links": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/definitions/Link"
                            }
                        ],
                        "xml": {
                            "name": "_link"
                        }
                    },
                    "xml": {
                        "name": "_links",
                        "wrapped": true
                    }
                }
            },
            "additionalProperties": false
        },
        "GetIndividualClassificationByIdResponseModel": {
            "type": "object",
            "properties": {
                "classification_fixed_id": {
                    "format": "int32",
                    "type": "integer"
                },
                "clause_fixed_id": {
                    "format": "int32",
                    "type": "integer"
                },
                "clauses": {
                    "type": "string"
                },
                "clause_description": {
                    "type": "string"
                },
                "parent_classification_name": {
                    "type": "string"
                },
                "classification": {
                    "type": "string"
                },
                "classification_level": {
                    "format": "int32",
                    "type": "integer"
                },
                "next_down_classification_fixed_id": {
                    "format": "int32",
                    "type": "integer"
                },
                "next_up_classification_fixed_id": {
                    "format": "int32",
                    "type": "integer"
                },
                "operative_from": {
                    "type": "string"
                },
                "operative_to": {
                    "type": "string"
                },
                "version_number": {
                    "format": "int32",
                    "type": "integer"
                },
                "last_modified_datetime": {
                    "format": "date-time",
                    "type": "string"
                },
                "published_year": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "additionalProperties": false
        },
        "GetIndividualExpenseAllowanceByIdResponse": {
            "type": "object",
            "properties": {
                "_meta": {
                    "$ref": "#/definitions/SingleItemMetaModel"
                },
                "result": {
                    "$ref": "#/definitions/GetIndividualExpenseAllowancesResponseModel"
                },
                "_links": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/definitions/Link"
                            }
                        ],
                        "xml": {
                            "name": "_link"
                        }
                    },
                    "xml": {
                        "name": "_links",
                        "wrapped": true
                    }
                }
            },
            "additionalProperties": false
        },
        "GetIndividualExpenseAllowancesResponseModel": {
            "type": "object",
            "properties": {
                "expense_allowance_fixed_id": {
                    "format": "int32",
                    "type": "integer"
                },
                "clause_fixed_id": {
                    "format": "int32",
                    "type": "integer"
                },
                "clauses": {
                    "type": "string"
                },
                "parent_allowance": {
                    "type": "string"
                },
                "allowance": {
                    "type": "string"
                },
                "is_all_purpose": {
                    "type": "boolean"
                },
                "allowance_amount": {
                    "format": "double",
                    "type": "number"
                },
                "payment_frequency": {
                    "type": "string"
                },
                "last_adjusted_year": {
                    "format": "int32",
                    "type": "integer"
                },
                "cpi_quarter_last_adjusted": {
                    "type": "string"
                },
                "operative_from": {
                    "type": "string"
                },
                "operative_to": {
                    "type": "string"
                },
                "version_number": {
                    "format": "int32",
                    "type": "integer"
                },
                "last_modified_datetime": {
                    "format": "date-time",
                    "type": "string"
                },
                "published_year": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "additionalProperties": false
        },
        "GetIndividualPayRateByIdResponse": {
            "type": "object",
            "properties": {
                "_meta": {
                    "$ref": "#/definitions/PagedResultMetaModel"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/definitions/GetIndividualPayRateByIdResponseModel"
                            }
                        ],
                        "xml": {
                            "name": "result"
                        }
                    },
                    "xml": {
                        "name": "results",
                        "wrapped": true
                    }
                },
                "_links": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/definitions/Link"
                            }
                        ],
                        "xml": {
                            "name": "_link"
                        }
                    },
                    "xml": {
                        "name": "_links",
                        "wrapped": true
                    }
                }
            },
            "additionalProperties": false
        },
        "GetIndividualPayRateByIdResponseModel": {
            "type": "object",
            "properties": {
                "classification_fixed_id": {
                    "format": "int32",
                    "type": "integer"
                },
                "base_pay_rate_id": {
                    "type": "string"
                },
                "base_rate_type": {
                    "type": "string"
                },
                "base_rate": {
                    "format": "double",
                    "type": "number"
                },
                "calculated_pay_rate_id": {
                    "type": "string"
                },
                "calculated_rate_type": {
                    "type": "string"
                },
                "calculated_rate": {
                    "format": "double",
                    "type": "number"
                },
                "parent_classification_name": {
                    "type": "string"
                },
                "classification": {
                    "type": "string"
                },
                "classification_level": {
                    "format": "int32",
                    "type": "integer"
                },
                "employee_rate_type_code": {
                    "type": "string"
                },
                "operative_from": {
                    "type": "string"
                },
                "operative_to": {
                    "type": "string"
                },
                "version_number": {
                    "format": "int32",
                    "type": "integer"
                },
                "published_year": {
                    "format": "int32",
                    "type": "integer"
                },
                "last_modified_datetime": {
                    "format": "date-time",
                    "type": "string"
                }
            },
            "additionalProperties": false
        },
        "GetIndividualWageAllowanceByAwardIdResponse": {
            "type": "object",
            "properties": {
                "_meta": {
                    "$ref": "#/definitions/SingleItemMetaModel"
                },
                "result": {
                    "$ref": "#/definitions/GetIndividualWageAllowancesResponseModel"
                },
                "_links": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/definitions/Link"
                            }
                        ],
                        "xml": {
                            "name": "_link"
                        }
                    },
                    "xml": {
                        "name": "_links",
                        "wrapped": true
                    }
                }
            },
            "additionalProperties": false
        },
        "GetIndividualWageAllowancesResponseModel": {
            "type": "object",
            "properties": {
                "wage_allowance_fixed_id": {
                    "format": "int32",
                    "type": "integer"
                },
                "clause_fixed_id": {
                    "format": "int32",
                    "type": "integer"
                },
                "clauses": {
                    "type": "string"
                },
                "parent_allowance": {
                    "type": "string"
                },
                "allowance": {
                    "type": "string"
                },
                "is_all_purpose": {
                    "type": "boolean"
                },
                "rate": {
                    "format": "double",
                    "type": "number"
                },
                "rate_unit": {
                    "type": "string"
                },
                "base_pay_rate_id": {
                    "type": "string"
                },
                "allowance_amount": {
                    "format": "double",
                    "type": "number"
                },
                "payment_frequency": {
                    "type": "string"
                },
                "operative_from": {
                    "type": "string"
                },
                "operative_to": {
                    "type": "string"
                },
                "version_number": {
                    "format": "int32",
                    "type": "integer"
                },
                "last_modified_datetime": {
                    "format": "date-time",
                    "type": "string"
                },
                "published_year": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "additionalProperties": false
        },
        "GetPayRatesByAwardIdResponse": {
            "type": "object",
            "properties": {
                "_meta": {
                    "$ref": "#/definitions/PagedResultMetaModel"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/definitions/PayRatesModel"
                            }
                        ],
                        "xml": {
                            "name": "result"
                        }
                    },
                    "xml": {
                        "name": "results",
                        "wrapped": true
                    }
                },
                "_links": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/definitions/Link"
                            }
                        ],
                        "xml": {
                            "name": "_link"
                        }
                    },
                    "xml": {
                        "name": "_links",
                        "wrapped": true
                    }
                }
            },
            "additionalProperties": false
        },
        "GetPenaltiesByAwardIdResponse": {
            "type": "object",
            "properties": {
                "_meta": {
                    "$ref": "#/definitions/PagedResultMetaModel"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/definitions/PenaltyModel"
                            }
                        ],
                        "xml": {
                            "name": "result"
                        }
                    },
                    "xml": {
                        "name": "results",
                        "wrapped": true
                    }
                },
                "_links": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/definitions/Link"
                            }
                        ],
                        "xml": {
                            "name": "_link"
                        }
                    },
                    "xml": {
                        "name": "_links",
                        "wrapped": true
                    }
                }
            },
            "additionalProperties": false
        },
        "GetWageAllowancesByAwardIdResponse": {
            "type": "object",
            "properties": {
                "_meta": {
                    "$ref": "#/definitions/PagedResultMetaModel"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/definitions/WageAllowanceModel"
                            }
                        ],
                        "xml": {
                            "name": "result"
                        }
                    },
                    "xml": {
                        "name": "results",
                        "wrapped": true
                    }
                },
                "_links": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/definitions/Link"
                            }
                        ],
                        "xml": {
                            "name": "_link"
                        }
                    },
                    "xml": {
                        "name": "_links",
                        "wrapped": true
                    }
                }
            },
            "additionalProperties": false
        },
        "GetWebhookSubscriptionByIdResponse": {
            "type": "object",
            "properties": {
                "_meta": {
                    "$ref": "#/definitions/SingleItemMetaModel"
                },
                "result": {
                    "$ref": "#/definitions/GetWebhookSubscriptionByIdResponseModel"
                },
                "_links": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/definitions/Link"
                            }
                        ],
                        "xml": {
                            "name": "_link"
                        }
                    },
                    "xml": {
                        "name": "_links",
                        "wrapped": true
                    }
                }
            },
            "additionalProperties": false
        },
        "GetWebhookSubscriptionByIdResponseModel": {
            "required": [
                "callback_url",
                "hook_on",
                "http_verb"
            ],
            "type": "object",
            "properties": {
                "http_verb": {
                    "minLength": 1,
                    "type": "string"
                },
                "callback_url": {
                    "minLength": 1,
                    "type": "string"
                },
                "hook_on": {
                    "minLength": 1,
                    "type": "string"
                },
                "entity_fixed_id": {
                    "format": "int32",
                    "type": "integer"
                },
                "award_fixed_id": {
                    "format": "int32",
                    "type": "integer"
                },
                "webhook_headers": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/definitions/HeadersModel"
                            }
                        ],
                        "xml": {
                            "name": "webhook_header"
                        }
                    },
                    "xml": {
                        "name": "webhook_headers",
                        "wrapped": true
                    }
                },
                "webhook_fixed_id": {
                    "format": "uuid",
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "created_on": {
                    "format": "date-time",
                    "type": "string"
                },
                "updated_on": {
                    "format": "date-time",
                    "type": "string"
                }
            },
            "additionalProperties": false
        },
        "HeadersModel": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "additionalProperties": false
        },
        "Link": {
            "type": "object",
            "properties": {
                "href": {
                    "type": "string"
                },
                "rel": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                }
            },
            "additionalProperties": false
        },
        "PagedResultMetaModel": {
            "type": "object",
            "properties": {
                "current_page": {
                    "format": "int32",
                    "type": "integer"
                },
                "page_count": {
                    "format": "int32",
                    "type": "integer"
                },
                "limit": {
                    "format": "int32",
                    "type": "integer"
                },
                "result_count": {
                    "format": "int32",
                    "type": "integer"
                },
                "first_row_on_page": {
                    "format": "int32",
                    "type": "integer",
                    "readOnly": true
                },
                "last_row_on_page": {
                    "format": "int32",
                    "type": "integer",
                    "readOnly": true
                },
                "has_more_results": {
                    "type": "boolean",
                    "readOnly": true
                },
                "has_previous_results": {
                    "type": "boolean",
                    "readOnly": true
                }
            },
            "additionalProperties": false
        },
        "PayRatesModel": {
            "type": "object",
            "properties": {
                "classification_fixed_id": {
                    "format": "int32",
                    "type": "integer"
                },
                "base_pay_rate_id": {
                    "type": "string"
                },
                "base_rate_type": {
                    "type": "string"
                },
                "base_rate": {
                    "format": "double",
                    "type": "number"
                },
                "calculated_pay_rate_id": {
                    "type": "string"
                },
                "calculated_rate_type": {
                    "type": "string"
                },
                "calculated_rate": {
                    "format": "double",
                    "type": "number"
                },
                "parent_classification_name": {
                    "type": "string"
                },
                "classification": {
                    "type": "string"
                },
                "classification_level": {
                    "format": "int32",
                    "type": "integer"
                },
                "employee_rate_type_code": {
                    "type": "string"
                },
                "operative_from": {
                    "type": "string"
                },
                "operative_to": {
                    "type": "string"
                },
                "version_number": {
                    "format": "int32",
                    "type": "integer"
                },
                "published_year": {
                    "format": "int32",
                    "type": "integer"
                },
                "last_modified_datetime": {
                    "format": "date-time",
                    "type": "string"
                }
            },
            "additionalProperties": false
        },
        "PenaltyModel": {
            "type": "object",
            "properties": {
                "penalty_fixed_id": {
                    "format": "int32",
                    "type": "integer"
                },
                "clause_fixed_id": {
                    "format": "int32",
                    "type": "integer"
                },
                "clause_description": {
                    "type": "string"
                },
                "classification_level": {
                    "format": "int32",
                    "type": "integer"
                },
                "penalty_description": {
                    "type": "string"
                },
                "rate": {
                    "format": "double",
                    "type": "number"
                },
                "employee_rate_type_code": {
                    "type": "string"
                },
                "penalty_calculated_value": {
                    "format": "double",
                    "type": "number"
                },
                "calculated_includes_all_purpose": {
                    "type": "boolean"
                },
                "base_pay_rate_id": {
                    "type": "string"
                },
                "operative_from": {
                    "type": "string"
                },
                "operative_to": {
                    "type": "string"
                },
                "version_number": {
                    "format": "int32",
                    "type": "integer"
                },
                "published_year": {
                    "format": "int32",
                    "type": "integer"
                },
                "last_modified_datetime": {
                    "format": "date-time",
                    "type": "string"
                }
            },
            "additionalProperties": false
        },
        "SingleItemMetaModel": {
            "type": "object",
            "additionalProperties": false
        },
        "SparseUpdateSubscriptionRequestModel": {
            "type": "object",
            "properties": {
                "callback_url": {
                    "type": "string"
                },
                "webhook_headers": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/definitions/HeadersModel"
                            }
                        ],
                        "xml": {
                            "name": "webhook_header"
                        }
                    },
                    "xml": {
                        "name": "webhook_headers",
                        "wrapped": true
                    }
                },
                "is_active": {
                    "type": "boolean"
                }
            },
            "additionalProperties": false,
            "example": {
                "callback_url": "string",
                "webhook_headers": [
                    {
                        "name": "string",
                        "value": "string"
                    }
                ],
                "is_active": true
            }
        },
        "SubscriptionsModel": {
            "required": [
                "callback_url",
                "hook_on",
                "http_verb"
            ],
            "type": "object",
            "properties": {
                "http_verb": {
                    "minLength": 1,
                    "type": "string"
                },
                "callback_url": {
                    "minLength": 1,
                    "type": "string"
                },
                "hook_on": {
                    "minLength": 1,
                    "type": "string"
                },
                "entity_fixed_id": {
                    "format": "int32",
                    "type": "integer"
                },
                "award_fixed_id": {
                    "format": "int32",
                    "type": "integer"
                },
                "webhook_headers": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/definitions/HeadersModel"
                            }
                        ],
                        "xml": {
                            "name": "webhook_header"
                        }
                    },
                    "xml": {
                        "name": "webhook_headers",
                        "wrapped": true
                    }
                },
                "webhook_fixed_id": {
                    "format": "uuid",
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "created_on": {
                    "format": "date-time",
                    "type": "string"
                },
                "updated_on": {
                    "format": "date-time",
                    "type": "string"
                }
            },
            "additionalProperties": false
        },
        "WageAllowanceModel": {
            "type": "object",
            "properties": {
                "wage_allowance_fixed_id": {
                    "format": "int32",
                    "type": "integer"
                },
                "clause_fixed_id": {
                    "format": "int32",
                    "type": "integer"
                },
                "clauses": {
                    "type": "string"
                },
                "parent_allowance": {
                    "type": "string"
                },
                "allowance": {
                    "type": "string"
                },
                "is_all_purpose": {
                    "type": "boolean"
                },
                "rate": {
                    "format": "double",
                    "type": "number"
                },
                "rate_unit": {
                    "type": "string"
                },
                "base_pay_rate_id": {
                    "type": "string"
                },
                "allowance_amount": {
                    "format": "double",
                    "type": "number"
                },
                "payment_frequency": {
                    "type": "string"
                },
                "operative_from": {
                    "type": "string"
                },
                "operative_to": {
                    "type": "string"
                },
                "version_number": {
                    "format": "int32",
                    "type": "integer"
                },
                "last_modified_datetime": {
                    "format": "date-time",
                    "type": "string"
                },
                "published_year": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "additionalProperties": false
        }
    },
    "tags": []
}